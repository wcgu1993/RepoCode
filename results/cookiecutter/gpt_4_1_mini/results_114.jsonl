{"task_id": 114, "prediction_id": 0, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    if not isinstance(default, dict):\n        # If default is not a dict, just return the overwrite value\n        return copy.deepcopy(overwrite)\n\n    result = copy.deepcopy(default)\n\n    for key, value in overwrite.items():\n        if key in result and isinstance(result[key], dict) and isinstance(value, dict):\n            # Both values are dicts, merge recursively\n            result[key] = merge_configs(result[key], value)\n        else:\n            # Otherwise, overwrite or add the value\n            result[key] = copy.deepcopy(value)\n\n    return result", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 1, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    if not isinstance(default, dict) or not isinstance(overwrite, dict):\n        return overwrite\n\n    result = copy.deepcopy(default)\n\n    for key, value in overwrite.items():\n        if (\n            key in result\n            and isinstance(result[key], dict)\n            and isinstance(value, dict)\n        ):\n            result[key] = merge_configs(result[key], value)\n        else:\n            result[key] = copy.deepcopy(value)\n    return result", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 2, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    if not isinstance(default, dict) or not isinstance(overwrite, dict):\n        # If either is not a dict, we cannot merge recursively, return overwrite\n        return overwrite\n\n    result = copy.deepcopy(default)\n\n    for key, value in overwrite.items():\n        if key in result and isinstance(result[key], dict) and isinstance(value, dict):\n            result[key] = merge_configs(result[key], value)\n        else:\n            result[key] = value\n\n    return result", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 3, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    if not isinstance(default, dict):\n        # If default is not a dict, just return overwrite (overwrite replaces default)\n        return copy.deepcopy(overwrite)\n    if not isinstance(overwrite, dict):\n        # Overwrite replaces default if overwrite is not a dict\n        return copy.deepcopy(overwrite)\n\n    merged = copy.deepcopy(default)\n    for key, value in overwrite.items():\n        if key in merged and isinstance(merged[key], dict) and isinstance(value, dict):\n            merged[key] = merge_configs(merged[key], value)\n        else:\n            merged[key] = copy.deepcopy(value)\n    return merged", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 4, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if (\n            key in default\n            and isinstance(default[key], dict)\n            and isinstance(value, dict)\n        ):\n            merge_configs(default[key], value)\n        else:\n            default[key] = copy.deepcopy(value)\n    return default", "message": "passed", "passed": true}

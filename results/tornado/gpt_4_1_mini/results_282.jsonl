{"task_id": 282, "prediction_id": 0, "generation": "from typing import Dict, List, AnyStr, Iterable, Tuple\n\ndef qs_to_qsl(qs: Dict[str, List[AnyStr]]) -> Iterable[Tuple[str, AnyStr]]:\n    \"\"\"Generator converting a result of ``parse_qs`` back to name-value pairs.\n\n    .. versionadded:: 5.0\n    \"\"\"\n    for key, values in qs.items():\n        for value in values:\n            yield (key, value)", "message": "passed", "passed": true}
{"task_id": 282, "prediction_id": 1, "generation": "from typing import Dict, List, AnyStr, Iterable, Tuple\n\n\ndef qs_to_qsl(qs: Dict[str, List[AnyStr]]) -> Iterable[Tuple[str, AnyStr]]:\n    \"\"\"Generator converting a result of ``parse_qs`` back to name-value pairs.\n\n    .. versionadded:: 5.0\n    \"\"\"\n    for key, values in qs.items():\n        for value in values:\n            yield (key, value)", "message": "passed", "passed": true}
{"task_id": 282, "prediction_id": 2, "generation": "from typing import Dict, List, Tuple, Iterable, AnyStr\n\n\ndef qs_to_qsl(qs: Dict[str, List[AnyStr]]) -> Iterable[Tuple[str, AnyStr]]:\n    \"\"\"Generator converting a result of ``parse_qs`` back to name-value pairs.\n\n    .. versionadded:: 5.0\n    \"\"\"\n    for key, values in qs.items():\n        for value in values:\n            yield key, value", "message": "passed", "passed": true}
{"task_id": 282, "prediction_id": 3, "generation": "from typing import Dict, List, Iterable, Tuple, AnyStr\n\ndef qs_to_qsl(qs: Dict[str, List[AnyStr]]) -> Iterable[Tuple[str, AnyStr]]:\n    \"\"\"Generator converting a result of ``parse_qs`` back to name-value pairs.\n\n    .. versionadded:: 5.0\n    \"\"\"\n    for key, values in qs.items():\n        for value in values:\n            yield (key, value)", "message": "passed", "passed": true}
{"task_id": 282, "prediction_id": 4, "generation": "from typing import Dict, List, Tuple, Iterable, AnyStr\n\ndef qs_to_qsl(qs: Dict[str, List[AnyStr]]) -> Iterable[Tuple[str, AnyStr]]:\n    \"\"\"Generator converting a result of ``parse_qs`` back to name-value pairs.\n\n    .. versionadded:: 5.0\n    \"\"\"\n    for name, values in qs.items():\n        for value in values:\n            yield (name, value)", "message": "passed", "passed": true}

{"task_id": 256, "prediction_id": 0, "generation": "import ipaddress\n\ndef is_valid_ip(ip: str) -> bool:\n    \"\"\"Returns ``True`` if the given string is a well-formed IP address.\n\n    Supports IPv4 and IPv6.\n    \"\"\"\n    try:\n        ipaddress.ip_address(ip)\n        return True\n    except ValueError:\n        return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 2187, in <module>\n  File \"<string>\", line 2186, in test_23\nAssertionError\n", "passed": false}
{"task_id": 256, "prediction_id": 1, "generation": "import ipaddress\n\ndef is_valid_ip(ip: str) -> bool:\n    \"\"\"Returns ``True`` if the given string is a well-formed IP address.\n\n    Supports IPv4 and IPv6.\n    \"\"\"\n    try:\n        ipaddress.ip_address(ip)\n        return True\n    except ValueError:\n        return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 2187, in <module>\n  File \"<string>\", line 2186, in test_23\nAssertionError\n", "passed": false}
{"task_id": 256, "prediction_id": 2, "generation": "import ipaddress\n\ndef is_valid_ip(ip: str) -> bool:\n    \"\"\"Returns ``True`` if the given string is a well-formed IP address.\n\n    Supports IPv4 and IPv6.\n    \"\"\"\n    try:\n        ipaddress.ip_address(ip)\n        return True\n    except ValueError:\n        return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 2187, in <module>\n  File \"<string>\", line 2186, in test_23\nAssertionError\n", "passed": false}
{"task_id": 256, "prediction_id": 3, "generation": "import socket\n\ndef is_valid_ip(ip: str) -> bool:\n    \"\"\"Returns ``True`` if the given string is a well-formed IP address.\n\n    Supports IPv4 and IPv6.\n    \"\"\"\n    try:\n        # socket.inet_pton works for both IPv4 and IPv6,\n        # but is not available on Windows for IPv6 before Python 3.4,\n        # so use socket.inet_pton if possible, else fallback to socket.inet_aton and ipv6 parsing.\n        # However, since no context functions were provided for IP validation,\n        # the standard socket module's inet_pton is the most straightforward choice.\n        socket.inet_pton(socket.AF_INET, ip)\n        return True\n    except OSError:\n        pass\n\n    try:\n        socket.inet_pton(socket.AF_INET6, ip)\n        return True\n    except OSError:\n        return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 804, in <module>\n  File \"<string>\", line 803, in test_60\n  File \"<string>\", line 299, in is_valid_ip\nValueError: embedded null character\n", "passed": false}
{"task_id": 256, "prediction_id": 4, "generation": "import ipaddress\n\ndef is_valid_ip(ip: str) -> bool:\n    \"\"\"Returns ``True`` if the given string is a well-formed IP address.\n\n    Supports IPv4 and IPv6.\n    \"\"\"\n    try:\n        ipaddress.ip_address(ip)\n        return True\n    except ValueError:\n        return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 2187, in <module>\n  File \"<string>\", line 2186, in test_23\nAssertionError\n", "passed": false}

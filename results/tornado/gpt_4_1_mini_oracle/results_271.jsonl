{"task_id": 271, "prediction_id": 0, "generation": "def _normalize_header(name: str) -> str:\n    \"\"\"Map a header name to Http-Header-Case.\n\n    >>> _normalize_header(\"coNtent-TYPE\")\n    'Content-Type'\n    \"\"\"\n    # Split header name by hyphens\n    parts = name.lower().split('-')\n    # Capitalize first letter of each part and join them back\n    normalized = '-'.join(part.capitalize() for part in parts)\n    return normalized", "message": "passed", "passed": true}
{"task_id": 271, "prediction_id": 1, "generation": "def _normalize_header(name: str) -> str:\n    \"\"\"Map a header name to Http-Header-Case.\n\n    >>> _normalize_header(\"coNtent-TYPE\")\n    'Content-Type'\n    \"\"\"\n    # Split header name by hyphens, capitalize each part in Http-Header-Case style\n    return \"-\".join(part.capitalize() for part in name.split(\"-\"))", "message": "passed", "passed": true}
{"task_id": 271, "prediction_id": 2, "generation": "def _normalize_header(name: str) -> str:\n    \"\"\"Map a header name to Http-Header-Case.\n\n    >>> _normalize_header(\"coNtent-TYPE\")\n    'Content-Type'\n    \"\"\"\n    # Split the header name by hyphens and capitalize each part\n    parts = name.split('-')\n    normalized_parts = []\n    for part in parts:\n        if part:\n            normalized_parts.append(part[0].upper() + part[1:].lower())\n        else:\n            normalized_parts.append('')\n    return '-'.join(normalized_parts)", "message": "passed", "passed": true}
{"task_id": 271, "prediction_id": 3, "generation": "def _normalize_header(name: str) -> str:\n    \"\"\"Map a header name to Http-Header-Case.\n\n    >>> _normalize_header(\"coNtent-TYPE\")\n    'Content-Type'\n    \"\"\"\n    # Split the header by hyphens, capitalize each part appropriately, then join.\n    # We lowercase the whole part first for consistent capitalization, then capitalize first letter.\n    parts = name.split('-')\n    normalized_parts = [part.lower().capitalize() if part else '' for part in parts]\n    return '-'.join(normalized_parts)", "message": "passed", "passed": true}
{"task_id": 271, "prediction_id": 4, "generation": "def _normalize_header(name: str) -> str:\n    \"\"\"Map a header name to Http-Header-Case.\n\n    >>> _normalize_header(\"coNtent-TYPE\")\n    'Content-Type'\n    \"\"\"\n    # Split the header name by hyphens\n    parts = name.split(\"-\")\n    # Capitalize each part (first letter uppercase, rest lowercase)\n    normalized_parts = [part.capitalize() for part in parts]\n    # Join parts back with hyphens\n    return \"-\".join(normalized_parts)", "message": "passed", "passed": true}

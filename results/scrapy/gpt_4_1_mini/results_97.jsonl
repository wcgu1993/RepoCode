{"task_id": 97, "prediction_id": 0, "generation": "from urllib.parse import urlparse\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not url:\n        return False\n    try:\n        hostname = urlparse(url).hostname\n    except Exception:\n        return False\n    if hostname is None:\n        return False\n    hostname = hostname.lower()\n    for domain in domains:\n        domain = domain.lower()\n        if hostname == domain or hostname.endswith('.' + domain):\n            return True\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 733, in <module>\n  File \"<string>\", line 729, in test_179\nAssertionError\n", "passed": false}
{"task_id": 97, "prediction_id": 1, "generation": "from urllib.parse import urlparse\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not url or not domains:\n        return False\n\n    try:\n        hostname = urlparse(url).hostname\n    except Exception:\n        return False\n\n    if hostname is None:\n        return False\n\n    hostname = hostname.lower()\n    # domains could be list of domains, match if hostname endswith any domain (exact or subdomain)\n    for domain in domains:\n        domain = domain.lower()\n        if hostname == domain:\n            return True\n        # Check if hostname is subdomain of domain\n        if hostname.endswith(\".\" + domain):\n            return True\n\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 741, in <module>\n  File \"<string>\", line 737, in test_179\nAssertionError\n", "passed": false}
{"task_id": 97, "prediction_id": 2, "generation": "from urllib.parse import urlparse\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not url or not domains:\n        return False\n    try:\n        hostname = urlparse(url).hostname\n    except Exception:\n        return False\n    if not hostname:\n        return False\n    hostname = hostname.lower()\n    normalized_domains = {d.lower() for d in domains}\n    # Check exact domain match or if the hostname is a subdomain of any given domain\n    for domain in normalized_domains:\n        if hostname == domain or hostname.endswith('.' + domain):\n            return True\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 734, in <module>\n  File \"<string>\", line 730, in test_179\nAssertionError\n", "passed": false}
{"task_id": 97, "prediction_id": 3, "generation": "from urllib.parse import urlparse\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not url or not domains:\n        return False\n\n    try:\n        hostname = urlparse(url).hostname\n    except Exception:\n        return False\n\n    if hostname is None:\n        return False\n\n    hostname = hostname.lower()\n\n    for domain in domains:\n        if not domain:\n            continue\n        domain = domain.lower()\n        # Exact match or subdomain match\n        if hostname == domain or hostname.endswith('.' + domain):\n            return True\n\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 741, in <module>\n  File \"<string>\", line 737, in test_179\nAssertionError\n", "passed": false}
{"task_id": 97, "prediction_id": 4, "generation": "from urllib.parse import urlparse\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not url or not domains:\n        return False\n    try:\n        hostname = urlparse(url).hostname\n    except Exception:\n        return False\n    if hostname is None:\n        return False\n    hostname = hostname.lower()\n    for domain in domains:\n        domain = domain.lower()\n        if hostname == domain or hostname.endswith('.' + domain):\n            return True\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 733, in <module>\n  File \"<string>\", line 729, in test_179\nAssertionError\n", "passed": false}

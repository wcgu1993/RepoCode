{"task_id": 77, "prediction_id": 0, "generation": "from scrapy.utils.python import unique, without_none_values\nfrom scrapy.utils.deprecate import update_classpath\n\n\ndef build_component_list(compdict, custom=None, convert=update_classpath):\n    \"\"\"Compose a component list from a { class: order } dictionary.\"\"\"\n    # Remove any entries with None value for order\n    compdict = without_none_values(compdict)\n\n    # Compose list of tuples (converted_class_path, order) for default components\n    default_components = [(convert(cls), order) for cls, order in compdict.items()]\n\n    # Compose list of converted custom components if provided, else empty list\n    custom_components = []\n    if custom:\n        # Ensuring custom is iterable (if it is a dict or something else, convert accordingly)\n        # but since docstring doesn't specify, just iterate over it\n        custom_components = [convert(comp) for comp in custom]\n\n    # Sort the default components by their order value\n    default_components.sort(key=lambda x: x[1])\n\n    # Extract only the class paths from sorted default components\n    sorted_defaults = [cls for cls, _ in default_components]\n\n    # Merge defaults and customs preserving order and uniqueness; customs come after defaults and override them\n    # So we put defaults first, then customs appended\n    combined = sorted_defaults + custom_components\n\n    # Use unique to remove duplicates but preserve order\n    return unique(combined)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 211, in <module>\n  File \"<string>\", line 210, in test_2\nAssertionError\n", "passed": false}
{"task_id": 77, "prediction_id": 1, "generation": "from scrapy.utils.python import unique, without_none_values\nfrom scrapy.utils.misc import arg_to_iter\nfrom scrapy.utils.deprecate import update_classpath\n\ndef build_component_list(compdict, custom=None, convert=update_classpath):\n    \"\"\"Compose a component list from a { class: order } dictionary.\"\"\"\n    # compdict: dict mapping class or class path strings to order value (or None)\n    # custom: additional component(s) to add at the beginning (can be None, single or iterable)\n    # convert: function to convert class path strings to normalized path (default update_classpath)\n\n    # 1. Clean compdict from None orders (ignore None order entries)\n    compdict = without_none_values(compdict)\n\n    # 2. Prepare the components sorted by their order values ascending\n    # compdict keys may be strings or classes; convert keys if needed\n    # convert is applied to keys if they are strings (paths), else keep as is\n\n    # Build list of tuples (order, converted_key)\n    ordered_components = []\n    for cls, order in compdict.items():\n        key = convert(cls) if isinstance(cls, str) else cls\n        ordered_components.append( (order, key) )\n    # Sort by order (ascending)\n    ordered_components.sort(key=lambda x: x[0])\n    # Extract only component keys in order\n    components = [comp for _, comp in ordered_components]\n\n    # 3. Add custom components at beginning if any\n    # Custom can be None, a single component, or iterable\n    # Normalize custom to iterable using arg_to_iter and then convert each if string\n    custom_iter = []\n    for c in arg_to_iter(custom):\n        custom_iter.append(convert(c) if isinstance(c, str) else c)\n\n    # 4. Combine custom and components; remove duplicates preserving order\n    combined = custom_iter + components\n    unique_components = unique(combined)\n\n    return unique_components", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 223, in <module>\n  File \"<string>\", line 222, in test_3\nAssertionError\n", "passed": false}
{"task_id": 77, "prediction_id": 2, "generation": "from scrapy.utils.python import unique\nfrom scrapy.utils.python import without_none_values\nfrom scrapy.utils.deprecate import update_classpath\nfrom scrapy.utils.misc import arg_to_iter\n\n\ndef build_component_list(compdict, custom=None, convert=update_classpath):\n    \"\"\"Compose a component list from a { class: order } dictionary.\"\"\"\n    # Clean the dictionary by removing None values\n    compdict = without_none_values(compdict)\n    # Convert the custom arg to iterable (empty list if None)\n    custom = arg_to_iter(custom)\n\n    # Create a list of tuples (converted_class_path, order)\n    # for components from compdict\n    base_components = [\n        (convert(comp), order)\n        for comp in compdict\n    ]\n\n    # For the custom components, convert them and assign order = None\n    # so they will be sorted after all those from compdict\n    custom_components = [(convert(comp), None) for comp in custom]\n\n    # Combine the two lists\n    combined = base_components + custom_components\n\n    # Sort the combined list by order, where None orders go last\n    combined.sort(key=lambda pair: (pair[1] is None, pair[1]))\n\n    # Extract only the component class paths, ensuring uniqueness but preserving order\n    components = unique((component for component, _ in combined))\n\n    return components", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 214, in <module>\n  File \"<string>\", line 213, in test_2\n  File \"<string>\", line 53, in build_component_list\n  File \"<string>\", line 54, in <listcomp>\nNameError: name 'order' is not defined\n", "passed": false}
{"task_id": 77, "prediction_id": 3, "generation": "from scrapy.utils.python import unique\nfrom scrapy.utils.misc import arg_to_iter\nfrom scrapy.utils.deprecate import update_classpath\n\n\ndef build_component_list(compdict, custom=None, convert=update_classpath):\n    \"\"\"Compose a component list from a { class: order } dictionary.\"\"\"\n    # Remove None entries from compdict\n    compdict = {k: v for k, v in compdict.items() if v is not None}\n\n    # Convert all inputs (compdict keys and custom) to iterables\n    comp_classes = list(compdict.keys())\n    custom = list(arg_to_iter(custom))\n\n    # Combine comp_classes and custom components keeping their order\n    combined = comp_classes + custom\n    \n    # Remove duplicates keeping the first occurrence only\n    unique_components = unique(combined)\n\n    # Convert components using the convert function (e.g., update_classpath)\n    converted = [convert(c) for c in unique_components]\n\n    return converted", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 204, in <module>\n  File \"<string>\", line 203, in test_2\nAssertionError\n", "passed": false}
{"task_id": 77, "prediction_id": 4, "generation": "from scrapy.utils.python import unique\nfrom scrapy.utils.python import without_none_values\nfrom scrapy.utils.deprecate import update_classpath\nfrom scrapy.utils.misc import arg_to_iter\n\n\ndef build_component_list(compdict, custom=None, convert=update_classpath):\n    \"\"\"Compose a component list from a { class: order } dictionary.\"\"\"\n    # compdict: dict mapping component class (or class path) to an order (int or None)\n    # custom: optional, additional component(s) to add (could be None, single, iterable)\n    # convert: function to convert class paths to actual paths (default is update_classpath)\n\n    # Remove None orders to avoid problems in sorting and treat accordingly\n    compdict = without_none_values(compdict)\n\n    # Compose initial component list: convert keys with convert function\n    components = [(convert(cls), order) for cls, order in compdict.items()]\n\n    # Add custom components, if any\n    # Using arg_to_iter to handle None, single or iterable inputs, treating dict as single item\n    for c in arg_to_iter(custom):\n        # If the custom component is a class or path string, add with order None (lowest priority)\n        # Convert the component using convert as well\n        components.append((convert(c), None))\n\n    # Sort components by order: components without order (None) are put at the end\n    # So we sort by a key that treats None as larger than any integer\n    def sort_key(item):\n        order = item[1]\n        return (order is None, order if order is not None else 0)\n\n    components_sorted = sorted(components, key=sort_key)\n\n    # Remove duplicates while preserving order, uniqueness checked by component path\n    components_unique = unique([component for component, _ in components_sorted])\n\n    return components_unique", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 217, in <module>\n  File \"<string>\", line 216, in test_2\nAssertionError\n", "passed": false}

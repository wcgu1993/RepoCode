{"task_id": 100, "prediction_id": 0, "generation": "from urllib.parse import urlparse, urlunparse\n\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # Add 'http' scheme and rebuild the URL\n        parsed = parsed._replace(scheme='http')\n        # If there's no netloc but there is a path, this means urlparse treated something like \"example.com\" as path\n        # In that case, shift path to netloc and clear path\n        if not parsed.netloc and parsed.path:\n            parsed = parsed._replace(netloc=parsed.path, path='')\n        return urlunparse(parsed)\n    return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 235, in <module>\n  File \"<string>\", line 234, in test_11\nAssertionError\n", "passed": false}
{"task_id": 100, "prediction_id": 1, "generation": "from urllib.parse import urlparse, urlunparse\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # Add default scheme \"http\" and rebuild the URL\n        parsed = parsed._replace(scheme=\"http\")\n        # In urlunparse, if netloc is empty and path contains domain,\n        # it can produce incorrect URL. So if netloc is empty but path\n        # starts like domain, fix by swapping.\n        if not parsed.netloc and '/' not in parsed.path:\n            # If input was like \"example.com\", urlparse puts it as path\n            # We treat it as netloc to produce \"http://example.com\"\n            parsed = parsed._replace(netloc=parsed.path, path='')\n        return urlunparse(parsed)\n    return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 237, in <module>\n  File \"<string>\", line 236, in test_11\nAssertionError\n", "passed": false}
{"task_id": 100, "prediction_id": 2, "generation": "from urllib.parse import urlparse, urlunparse\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # If there is no scheme, add 'http' as default and reconstruct the URL\n        return urlunparse(parsed._replace(scheme='http'))\n    return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 185, in <module>\n  File \"<string>\", line 184, in test_0\nAssertionError\n", "passed": false}
{"task_id": 100, "prediction_id": 3, "generation": "from urllib.parse import urlparse, urlunparse\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # Add 'http' scheme and rebuild the URL\n        parsed = parsed._replace(scheme='http')\n        # urlunparse will keep netloc, path, params, query, fragment as is\n        return urlunparse(parsed)\n    return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 187, in <module>\n  File \"<string>\", line 186, in test_0\nAssertionError\n", "passed": false}
{"task_id": 100, "prediction_id": 4, "generation": "from urllib.parse import urlparse, urlunparse\nfrom scrapy.utils.python import to_unicode\n\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    url = to_unicode(url)\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # Rebuild url adding 'http' scheme\n        # Note: urlparse returns empty scheme if none found.\n        # We reconstruct the URL using urlunparse:\n        # scheme, netloc, path, params, query, fragment\n        # If the netloc is missing but path contains an authority, like \"example.com/path\",\n        # urlparse treats \"example.com\" as path. To handle this correctly,\n        # we can check if netloc is empty and path looks like a domain.\n        # However, the safe and simple approach is to prepend 'http://' to the string\n        # and parse again, then return the rebuilt url.\n        return urlunparse(urlparse('http://' + url))\n    else:\n        return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 241, in <module>\n  File \"<string>\", line 240, in test_11\nAssertionError\n", "passed": false}

{"task_id": 103, "prediction_id": 0, "generation": "from scrapy.utils.python import is_listlike\n\ndef arg_to_iter(arg):\n    \"\"\"Convert an argument to an iterable. The argument can be a None, single\n    value, or an iterable.\n\n    Exception: if arg is a dict, [arg] will be returned\n    \"\"\"\n    if arg is None:\n        # None should result in empty iterable\n        return ()\n    if isinstance(arg, dict):\n        # dict is treated as a single item inside a list\n        return [arg]\n    if is_listlike(arg):\n        # if arg is list-like (iterable except str/bytes), return as is\n        return arg\n    # For single values (including str/bytes), return a tuple with that single value\n    return (arg,)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 311, in <module>\n  File \"<string>\", line 310, in test_5\nAssertionError\n", "passed": false}
{"task_id": 103, "prediction_id": 1, "generation": "from scrapy.utils.python import is_listlike\n\ndef arg_to_iter(arg):\n    \"\"\"Convert an argument to an iterable. The argument can be a None, single\n    value, or an iterable.\n\n    Exception: if arg is a dict, [arg] will be returned\n    \"\"\"\n    if arg is None:\n        return []\n    if isinstance(arg, dict):\n        return [arg]\n    if is_listlike(arg):\n        return arg\n    return [arg]", "message": "passed", "passed": true}
{"task_id": 103, "prediction_id": 2, "generation": "from scrapy.utils.python import is_listlike\n\ndef arg_to_iter(arg):\n    \"\"\"Convert an argument to an iterable. The argument can be a None, single\n    value, or an iterable.\n\n    Exception: if arg is a dict, [arg] will be returned\n    \"\"\"\n    if arg is None:\n        return []\n    if isinstance(arg, dict):\n        return [arg]\n    if is_listlike(arg):\n        return arg\n    return [arg]", "message": "passed", "passed": true}
{"task_id": 103, "prediction_id": 3, "generation": "from scrapy.utils.python import is_listlike\n\ndef arg_to_iter(arg):\n    \"\"\"Convert an argument to an iterable. The argument can be a None, single\n    value, or an iterable.\n\n    Exception: if arg is a dict, [arg] will be returned\n    \"\"\"\n    if arg is None:\n        return []\n    if isinstance(arg, dict):\n        return [arg]\n    if is_listlike(arg):\n        return arg\n    return [arg]", "message": "passed", "passed": true}
{"task_id": 103, "prediction_id": 4, "generation": "from scrapy.utils.python import is_listlike\n\ndef arg_to_iter(arg):\n    \"\"\"Convert an argument to an iterable. The argument can be a None, single\n    value, or an iterable.\n\n    Exception: if arg is a dict, [arg] will be returned\n    \"\"\"\n    if arg is None:\n        return []\n    if isinstance(arg, dict):\n        return [arg]\n    if is_listlike(arg):\n        return arg\n    return [arg]", "message": "passed", "passed": true}

{"task_id": 100, "prediction_id": 0, "generation": "from urllib.parse import urlparse, urlunparse\n\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # Add 'http' as scheme, keep rest unchanged\n        parsed = parsed._replace(scheme='http')\n        # When scheme is added, urlunparse will automatically add '://'\n        # If the original URL was like \"example.com/path\", urlparse treats it as a path.\n        # To handle that, we need to treat the original input carefully:\n        # If netloc is empty but path contains the domain (common), shift path to netloc.\n        if not parsed.netloc and parsed.path:\n            # Likely original url was like \"example.com/path\"\n            # So we need to set netloc from path's first component and keep the rest as path\n            parts = parsed.path.split('/', 1)\n            netloc = parts[0]\n            path = '/' + parts[1] if len(parts) > 1 else ''\n            parsed = parsed._replace(netloc=netloc, path=path)\n        return urlunparse(parsed)\n    else:\n        return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 243, in <module>\n  File \"<string>\", line 242, in test_11\nAssertionError\n", "passed": false}
{"task_id": 100, "prediction_id": 1, "generation": "from urllib.parse import urlparse, urlunparse\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # Add http scheme, reconstruct the url with \"http\" scheme\n        parsed = parsed._replace(scheme=\"http\")\n        return urlunparse(parsed)\n    return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 186, in <module>\n  File \"<string>\", line 185, in test_0\nAssertionError\n", "passed": false}
{"task_id": 100, "prediction_id": 2, "generation": "from urllib.parse import urlparse, urlunparse\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # If there's no scheme, add 'http' as default\n        parsed = parsed._replace(scheme='http')\n        return urlunparse(parsed)\n    return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 186, in <module>\n  File \"<string>\", line 185, in test_0\nAssertionError\n", "passed": false}
{"task_id": 100, "prediction_id": 3, "generation": "from urllib.parse import urlparse, urlunparse\n\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # When scope is missing, add 'http' as scheme and reconstruct URL\n        parsed = parsed._replace(scheme='http')\n        return urlunparse(parsed)\n    return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 187, in <module>\n  File \"<string>\", line 186, in test_0\nAssertionError\n", "passed": false}
{"task_id": 100, "prediction_id": 4, "generation": "from urllib.parse import urlparse, urlunparse\n\ndef add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    parsed = urlparse(url)\n    if not parsed.scheme:\n        # Add 'http' as scheme and recompose the URL\n        parsed = parsed._replace(scheme='http')\n        return urlunparse(parsed)\n    return url", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 186, in <module>\n  File \"<string>\", line 185, in test_0\nAssertionError\n", "passed": false}

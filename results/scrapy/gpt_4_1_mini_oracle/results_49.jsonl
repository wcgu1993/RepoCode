{"task_id": 49, "prediction_id": 0, "generation": "def binary_is_text(data):\n    \"\"\" Returns ``True`` if the given ``data`` argument (a ``bytes`` object)\n    does not contain unprintable control characters.\n    \"\"\"\n    # If input is empty, treat it as text (no control chars)\n    if not data:\n        return True\n\n    # _BINARYCHARS contains control characters considered \"binary\" except for common whitespace ones\n    # If any of these are present, data is considered binary (not text)\n    for b in data:\n        if b in _BINARYCHARS:\n            return False\n    return True", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1414, in <module>\n  File \"<string>\", line 1413, in test_extra_0\nAssertionError: Expected TypeError to be raised\n", "passed": false}
{"task_id": 49, "prediction_id": 1, "generation": "def binary_is_text(data):\n    \"\"\" Returns ``True`` if the given ``data`` argument (a ``bytes`` object)\n    does not contain unprintable control characters.\n    \"\"\"\n    # The definition of printable characters includes all bytes except control chars\n    # except common whitespace control chars: \\0 is excluded as unprintable, but \\t, \\n, \\r are allowed.\n\n    # _BINARYCHARS is defined as all bytes with ordinal < 32 (control chars),\n    # except \\0, \\t, \\n, \\r\n    _BINARYCHARS = {i for i in range(32)} - {0, 9, 10, 13}\n\n    # If any byte in data is in _BINARYCHARS, return False\n    return not any(byte in _BINARYCHARS for byte in data)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1413, in <module>\n  File \"<string>\", line 1412, in test_extra_0\nAssertionError: Expected TypeError to be raised\n", "passed": false}
{"task_id": 49, "prediction_id": 2, "generation": "def binary_is_text(data):\n    \"\"\" Returns ``True`` if the given ``data`` argument (a ``bytes`` object)\n    does not contain unprintable control characters.\n    \"\"\"\n    if not isinstance(data, bytes):\n        raise TypeError(\"data must be a bytes object\")\n\n    # _BINARYCHARS is a set of bytes for control characters that are considered binary/unprintable\n    # We check if any byte in data is in that set; if yes, data is binary-like (not text)\n    return not any(byte in _BINARYCHARS for byte in data)", "message": "failed: Traceback (most recent call last):\n  File \"<string>\", line 1405, in test_extra_0\n  File \"<string>\", line 198, in binary_is_text\nTypeError: data must be a bytes object\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1410, in <module>\n  File \"<string>\", line 1407, in test_extra_0\nAssertionError\n", "passed": false}
{"task_id": 49, "prediction_id": 3, "generation": "def binary_is_text(data):\n    \"\"\" Returns ``True`` if the given ``data`` argument (a ``bytes`` object)\n    does not contain unprintable control characters.\n    \"\"\"\n    # _BINARYCHARS is already defined in the file content as the set of bytes\n    # values considered as unprintable control characters (except allowed whitespace chars).\n    for byte in data:\n        if byte in _BINARYCHARS:\n            return False\n    return True", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1410, in <module>\n  File \"<string>\", line 1409, in test_extra_0\nAssertionError: Expected TypeError to be raised\n", "passed": false}
{"task_id": 49, "prediction_id": 4, "generation": "def binary_is_text(data):\n    \"\"\" Returns ``True`` if the given ``data`` argument (a ``bytes`` object)\n    does not contain unprintable control characters.\n    \"\"\"\n    if not isinstance(data, bytes):\n        raise TypeError(\"binary_is_text must receive a bytes object\")\n\n    # From the file context:\n    # _BINARYCHARS is the set of bytes representing control chars excluding common whitespace:\n    # _BINARYCHARS = {to_bytes(chr(i)) for i in range(32)} - {b\"\\0\", b\"\\t\", b\"\\n\", b\"\\r\"} plus ord values for those\n    # It basically represents unprintable control chars besides \\0, \\t, \\n, \\r.\n    # So if data contains any bytes from _BINARYCHARS, we consider it binary (not text).\n\n    # Checking presence of any byte in data that belongs to _BINARYCHARS\n    # Since _BINARYCHARS contains ints (codepoints), and data is bytes iterable of ints,\n    # we can check easily.\n\n    for b in data:\n        if b in _BINARYCHARS:\n            return False\n    return True", "message": "failed: Traceback (most recent call last):\n  File \"<string>\", line 1416, in test_extra_0\n  File \"<string>\", line 198, in binary_is_text\nTypeError: binary_is_text must receive a bytes object\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1421, in <module>\n  File \"<string>\", line 1418, in test_extra_0\nAssertionError\n", "passed": false}

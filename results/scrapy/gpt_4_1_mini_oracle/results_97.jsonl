{"task_id": 97, "prediction_id": 0, "generation": "from urllib.parse import urlparse\nfrom scrapy.utils.url import parse_url\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not url:\n        return False\n    parsed_url = parse_url(url)\n    hostname = parsed_url.hostname\n    if not hostname:\n        return False\n\n    # Normalize domains and hostname to lower case for case-insensitive comparison\n    hostname = hostname.lower()\n    normalized_domains = [d.lower() for d in domains]\n\n    # Check exact match or subdomain match\n    for domain in normalized_domains:\n        if hostname == domain:\n            return True\n        # Check if hostname ends with '.' + domain indicating a subdomain\n        if hostname.endswith('.' + domain):\n            return True\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 739, in <module>\n  File \"<string>\", line 735, in test_179\nAssertionError\n", "passed": false}
{"task_id": 97, "prediction_id": 1, "generation": "from urllib.parse import urlparse\nfrom scrapy.utils.url import parse_url\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not domains:\n        return False\n\n    parsed_url = parse_url(url)\n    netloc = parsed_url.netloc.lower()\n\n    # For each domain, check if netloc matches it exactly or ends with '.' + domain\n    for domain in domains:\n        domain = domain.lower()\n        if netloc == domain or netloc.endswith('.' + domain):\n            return True\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 602, in <module>\n  File \"<string>\", line 601, in test_137\nAssertionError\n", "passed": false}
{"task_id": 97, "prediction_id": 2, "generation": "from urllib.parse import urlparse\nfrom scrapy.utils.url import parse_url\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not domains:\n        return False\n\n    parsed_url = parse_url(url)\n    netloc = parsed_url.netloc.lower()\n\n    # Normalize domains lowercase as well\n    domains = [d.lower() for d in domains]\n\n    # Check if netloc equals any domain or ends with '.' + domain (to include subdomains)\n    for domain in domains:\n        if netloc == domain or netloc.endswith(\".\" + domain):\n            return True\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 604, in <module>\n  File \"<string>\", line 603, in test_137\nAssertionError\n", "passed": false}
{"task_id": 97, "prediction_id": 3, "generation": "from urllib.parse import urlparse\nfrom scrapy.utils.url import parse_url\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not domains:\n        return False\n\n    parsed_url = parse_url(url)\n    hostname = parsed_url.hostname\n    if not hostname:\n        return False\n\n    # Normalize domains to lowercase for case-insensitive comparison\n    hostname = hostname.lower()\n    normalized_domains = [d.lower() for d in domains]\n\n    # Check if hostname matches or is a subdomain of any domain in the list\n    for domain in normalized_domains:\n        if hostname == domain:\n            return True\n        # Also accept subdomains, e.g. hostname=foo.example.com, domain=example.com\n        if hostname.endswith('.' + domain):\n            return True\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 740, in <module>\n  File \"<string>\", line 736, in test_179\nAssertionError\n", "passed": false}
{"task_id": 97, "prediction_id": 4, "generation": "from urllib.parse import urlparse\nfrom scrapy.utils.url import parse_url\n\ndef url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    if not url:\n        return False\n\n    parsed_url = parse_url(url)\n    if not parsed_url.hostname:\n        return False\n\n    # Normalize domains to a set for faster membership checks and lowercase them\n    normalized_domains = {d.lower() for d in domains}\n\n    # hostname from parsed_url is lowercased already by urlparse, but normalize anyway\n    hostname = parsed_url.hostname.lower()\n\n    # Check exact domain match or if hostname is a subdomain of any domain in domains\n    for domain in normalized_domains:\n        if hostname == domain or hostname.endswith('.' + domain):\n            return True\n    return False", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 738, in <module>\n  File \"<string>\", line 734, in test_179\nAssertionError\n", "passed": false}

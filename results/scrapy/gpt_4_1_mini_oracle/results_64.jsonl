{"task_id": 64, "prediction_id": 0, "generation": "import re\n\ndef _path_safe(text):\n    \"\"\"\n    Return a filesystem-safe version of a string ``text``\n\n    >>> _path_safe('simple.org').startswith('simple.org')\n    True\n    >>> _path_safe('dash-underscore_.org').startswith('dash-underscore_.org')\n    True\n    >>> _path_safe('some@symbol?').startswith('some_symbol_')\n    True\n    \"\"\"\n    # Replace any character that is not A-Za-z0-9, dash, underscore, or dot with underscore\n    return re.sub(r'[^A-Za-z0-9._-]+', '_', text)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 231, in <module>\n  File \"<string>\", line 230, in test_5\nAssertionError\n", "passed": false}
{"task_id": 64, "prediction_id": 1, "generation": "import re\n\ndef _path_safe(text):\n    \"\"\"\n    Return a filesystem-safe version of a string ``text``\n\n    >>> _path_safe('simple.org').startswith('simple.org')\n    True\n    >>> _path_safe('dash-underscore_.org').startswith('dash-underscore_.org')\n    True\n    >>> _path_safe('some@symbol?').startswith('some_symbol_')\n    True\n    \"\"\"\n    # Replace any character that is NOT a letter, digit, dash, underscore, or dot with underscore\n    # This keeps letters, digits, '-', '_', and '.' as is.\n    safe_text = re.sub(r'[^a-zA-Z0-9\\-_.]', '_', text)\n    return safe_text", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 233, in <module>\n  File \"<string>\", line 232, in test_5\nAssertionError\n", "passed": false}
{"task_id": 64, "prediction_id": 2, "generation": "import re\n\ndef _path_safe(text):\n    \"\"\"\n    Return a filesystem-safe version of a string ``text``\n\n    >>> _path_safe('simple.org').startswith('simple.org')\n    True\n    >>> _path_safe('dash-underscore_.org').startswith('dash-underscore_.org')\n    True\n    >>> _path_safe('some@symbol?').startswith('some_symbol_')\n    True\n    \"\"\"\n    # Replace all characters that are NOT word characters, dash or dot with underscore\n    # \\w matches [a-zA-Z0-9_], so we allow \\w (letters, digits, underscore)\n    # plus dash (-) and dot (.)\n    return re.sub(r'[^\\w\\-.]', '_', text)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 233, in <module>\n  File \"<string>\", line 232, in test_5\nAssertionError\n", "passed": false}
{"task_id": 64, "prediction_id": 3, "generation": "import re\n\ndef _path_safe(text):\n    \"\"\"\n    Return a filesystem-safe version of a string ``text``\n\n    >>> _path_safe('simple.org').startswith('simple.org')\n    True\n    >>> _path_safe('dash-underscore_.org').startswith('dash-underscore_.org')\n    True\n    >>> _path_safe('some@symbol?').startswith('some_symbol_')\n    True\n    \"\"\"\n    # Replace any character not matching alphanumeric, dash, underscore or dot with underscore\n    return re.sub(r'[^A-Za-z0-9\\-_.]', '_', text)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 231, in <module>\n  File \"<string>\", line 230, in test_5\nAssertionError\n", "passed": false}
{"task_id": 64, "prediction_id": 4, "generation": "import re\n\ndef _path_safe(text):\n    \"\"\"\n    Return a filesystem-safe version of a string ``text``\n\n    >>> _path_safe('simple.org').startswith('simple.org')\n    True\n    >>> _path_safe('dash-underscore_.org').startswith('dash-underscore_.org')\n    True\n    >>> _path_safe('some@symbol?').startswith('some_symbol_')\n    True\n    \"\"\"\n    # Replace any character that is NOT a letter, digit, dash, underscore, or dot with underscore\n    # This keeps more filename-friendly characters intact while making it safe.\n    return re.sub(r'[^a-zA-Z0-9\\-_.]', '_', text)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 232, in <module>\n  File \"<string>\", line 231, in test_5\nAssertionError\n", "passed": false}

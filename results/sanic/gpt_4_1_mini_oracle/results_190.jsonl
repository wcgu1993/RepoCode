{"task_id": 190, "prediction_id": 0, "generation": "from typing import Optional, Tuple\nimport re\n\n_ipv6 = \"(?:[0-9A-Fa-f]{0,4}:){2,7}[0-9A-Fa-f]{0,4}\"\n_ipv6_re = re.compile(_ipv6)\n_host_re = re.compile(\n    r\"((?:\\[\" + _ipv6 + r\"\\])|[a-zA-Z0-9.\\-]{1,253})(?::(\\d{1,5}))?\"\n)\n\ndef parse_host(host: str) -> Tuple[Optional[str], Optional[int]]:\n    \"\"\"Split host:port into hostname and port.\n    :return: None in place of missing elements\n    \"\"\"\n    if not host:\n        return None, None\n\n    match = _host_re.fullmatch(host)\n    if not match:\n        return None, None\n\n    hostname, port_str = match.groups()\n    if hostname:\n        # Remove brackets for IPv6 literal addresses\n        if hostname.startswith(\"[\") and hostname.endswith(\"]\"):\n            hostname = hostname[1:-1]\n        hostname = hostname.lower()\n    else:\n        hostname = None\n\n    if port_str is None:\n        port = None\n    else:\n        try:\n            port = int(port_str)\n            if not (0 <= port <= 65535):\n                port = None\n        except ValueError:\n            port = None\n\n    return hostname, port", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 292, in <module>\n  File \"<string>\", line 291, in test_19\nAssertionError\n", "passed": false}
{"task_id": 190, "prediction_id": 1, "generation": "from typing import Optional, Tuple\nimport re\n\n_ipv6 = \"(?:[0-9A-Fa-f]{0,4}:){2,7}[0-9A-Fa-f]{0,4}\"\n_host_re = re.compile(\n    r\"((?:\\[\" + _ipv6 + r\"\\])|[a-zA-Z0-9.\\-]{1,253})(?::(\\d{1,5}))?\"\n)\n\n\ndef parse_host(host: str) -> Tuple[Optional[str], Optional[int]]:\n    \"\"\"Split host:port into hostname and port.\n    :return: None in place of missing elements\n    \"\"\"\n    if not host:\n        return None, None\n\n    m = _host_re.fullmatch(host)\n    if not m:\n        return None, None\n\n    hostname, port_str = m.groups()\n    if hostname.startswith(\"[\") and hostname.endswith(\"]\"):\n        hostname = hostname[1:-1]\n    port = None\n    if port_str:\n        try:\n            port = int(port_str)\n        except ValueError:\n            port = None\n    return hostname or None, port", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 282, in <module>\n  File \"<string>\", line 281, in test_19\nAssertionError\n", "passed": false}
{"task_id": 190, "prediction_id": 2, "generation": "from typing import Optional, Tuple\nimport re\n\n_ipv6 = \"(?:[0-9A-Fa-f]{0,4}:){2,7}[0-9A-Fa-f]{0,4}\"\n_ipv6_re = re.compile(_ipv6)\n_host_re = re.compile(\n    r\"((?:\\[\" + _ipv6 + r\"\\])|[a-zA-Z0-9.\\-]{1,253})(?::(\\d{1,5}))?\"\n)\n\n\ndef parse_host(host: str) -> Tuple[Optional[str], Optional[int]]:\n    \"\"\"Split host:port into hostname and port.\n    :return: None in place of missing elements\n    \"\"\"\n    if not host:\n        return None, None\n    match = _host_re.fullmatch(host)\n    if not match:\n        return None, None\n    hostname, port_str = match.groups()\n    if hostname.startswith(\"[\") and hostname.endswith(\"]\"):\n        # IPv6 literal address: remove brackets\n        hostname = hostname[1:-1]\n    if port_str is None:\n        port = None\n    else:\n        try:\n            port = int(port_str)\n            # Validate port range\n            if not (0 <= port <= 65535):\n                return hostname, None\n        except ValueError:\n            port = None\n    return hostname, port", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 286, in <module>\n  File \"<string>\", line 285, in test_19\nAssertionError\n", "passed": false}
{"task_id": 190, "prediction_id": 3, "generation": "import re\nfrom typing import Optional, Tuple\n\n_ipv6 = \"(?:[0-9A-Fa-f]{0,4}:){2,7}[0-9A-Fa-f]{0,4}\"\n_ipv6_re = re.compile(_ipv6)\n_host_re = re.compile(\n    r\"((?:\\[\" + _ipv6 + r\"\\])|[a-zA-Z0-9.\\-]{1,253})(?::(\\d{1,5}))?\"\n)\n\n\ndef parse_host(host: str) -> Tuple[Optional[str], Optional[int]]:\n    \"\"\"Split host:port into hostname and port.\n    :return: None in place of missing elements\n    \"\"\"\n    if not host:\n        return None, None\n\n    match = _host_re.fullmatch(host.strip())\n    if not match:\n        return None, None\n\n    hostname, port_str = match.groups()\n\n    if hostname is None:\n        return None, None\n\n    # Remove brackets for IPv6 addresses for returning\n    if hostname.startswith(\"[\") and hostname.endswith(\"]\"):\n        hostname = hostname[1:-1]\n\n    port = None\n    if port_str is not None:\n        try:\n            port = int(port_str)\n            if not (0 <= port <= 65535):\n                port = None\n        except ValueError:\n            port = None\n\n    return hostname.lower(), port", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 292, in <module>\n  File \"<string>\", line 291, in test_19\nAssertionError\n", "passed": false}
{"task_id": 190, "prediction_id": 4, "generation": "import re\nfrom typing import Optional, Tuple\n\n_ipv6 = \"(?:[0-9A-Fa-f]{0,4}:){2,7}[0-9A-Fa-f]{0,4}\"\n_ipv6_re = re.compile(_ipv6)\n_host_re = re.compile(\n    r\"((?:\\[\" + _ipv6 + r\"\\])|[a-zA-Z0-9.\\-]{1,253})(?::(\\d{1,5}))?\"\n)\n\n\ndef parse_host(host: str) -> Tuple[Optional[str], Optional[int]]:\n    \"\"\"Split host:port into hostname and port.\n    :return: None in place of missing elements\n    \"\"\"\n    if not host:\n        return None, None\n\n    m = _host_re.fullmatch(host)\n    if not m:\n        return None, None\n\n    hostname, port_str = m.groups()\n    if hostname is None:\n        return None, None\n\n    # Normalize hostname\n    if hostname.startswith(\"[\") and hostname.endswith(\"]\"):\n        # IPv6 literal, remove brackets\n        hostname = hostname[1:-1]\n    hostname = hostname.lower()\n\n    # Parse port if present\n    if port_str is not None:\n        try:\n            port = int(port_str)\n            if not (0 <= port <= 65535):\n                port = None\n        except ValueError:\n            port = None\n    else:\n        port = None\n\n    return hostname, port", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 295, in <module>\n  File \"<string>\", line 294, in test_19\nAssertionError\n", "passed": false}

{"task_id": 223, "prediction_id": 0, "generation": "def matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Join the alternates with | to form an alternation pattern\n    # Wrap with named group syntax (?P<name>...)\n    pattern = \"|\".join(alternates)\n    return f\"(?P<{name}>{pattern})\"", "message": "passed", "passed": true}
{"task_id": 223, "prediction_id": 1, "generation": "import re\n\ndef matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Escape each alternate to safely use in regex pattern\n    escaped_alternates = [re.escape(alt) for alt in alternates]\n    # Join all escaped alternates with | to form a group pattern\n    pattern = \"|\".join(escaped_alternates)\n    # Return as a named group pattern\n    return f\"(?P<{name}>{pattern})\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 124, in <module>\n  File \"<string>\", line 123, in test_13\nAssertionError\n", "passed": false}
{"task_id": 223, "prediction_id": 2, "generation": "import re\n\ndef matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Escape each alternate to safely use in regex pattern\n    escaped_alternates = [re.escape(alt) for alt in alternates]\n    # Join all alternates with '|' to create the alternation group\n    pattern = '|'.join(escaped_alternates)\n    # Return the named group pattern\n    return f\"(?P<{name}>{pattern})\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 124, in <module>\n  File \"<string>\", line 123, in test_13\nAssertionError\n", "passed": false}
{"task_id": 223, "prediction_id": 3, "generation": "import re\n\ndef matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Escape each alternate to safely include in regex pattern\n    escaped = (re.escape(alt) for alt in alternates)\n    # Join escaped alternates with alternation pipe |\n    pattern = '|'.join(escaped)\n    # Return named group pattern\n    return f\"(?P<{name}>{pattern})\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 124, in <module>\n  File \"<string>\", line 123, in test_13\nAssertionError\n", "passed": false}
{"task_id": 223, "prediction_id": 4, "generation": "import re\n\ndef matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Escape each alternate to safely use in regex\n    escaped_alternates = [re.escape(alt) for alt in alternates]\n    pattern = \"|\".join(escaped_alternates)\n    return fr\"(?P<{name}>{pattern})\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 122, in <module>\n  File \"<string>\", line 121, in test_13\nAssertionError\n", "passed": false}

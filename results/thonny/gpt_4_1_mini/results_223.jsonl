{"task_id": 223, "prediction_id": 0, "generation": "import re\n\ndef matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Escape each alternate to safely use in regex\n    escaped_alternates = [re.escape(alt) for alt in alternates]\n    # Join the escaped alternates with | to form pattern alternatives\n    pattern = '|'.join(escaped_alternates)\n    # Return the named group pattern\n    return f\"(?P<{name}>{pattern})\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 124, in <module>\n  File \"<string>\", line 123, in test_13\nAssertionError\n", "passed": false}
{"task_id": 223, "prediction_id": 1, "generation": "import re\n\ndef matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Escape all alternate strings to safely include them in a regex pattern\n    escaped_alternates = [re.escape(alt) for alt in alternates]\n    # Join escaped alternates with | to form the alternation group\n    pattern = \"|\".join(escaped_alternates)\n    # Return a named group with the given name and alternates pattern\n    return f\"(?P<{name}>{pattern})\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 124, in <module>\n  File \"<string>\", line 123, in test_13\nAssertionError\n", "passed": false}
{"task_id": 223, "prediction_id": 2, "generation": "def matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Join all alternates with '|' to create an alternation regex pattern\n    # Wrap this alternation with a named capturing group using the provided name\n    pattern = r\"(?P<{}>{})\".format(name, \"|\".join(alternates))\n    return pattern", "message": "passed", "passed": true}
{"task_id": 223, "prediction_id": 3, "generation": "def matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Join the alternates into a regex alternation pattern\n    # and wrap it in a named group with the given name.\n    pattern = \"|\".join(alternates)\n    return f\"(?P<{name}>{pattern})\"", "message": "passed", "passed": true}
{"task_id": 223, "prediction_id": 4, "generation": "import re\n\ndef matches_any(name, alternates):\n    \"Return a named group pattern matching list of alternates.\"\n    # Escape each alternate to safely match literal strings in regex\n    escaped_alternates = [re.escape(alt) for alt in alternates]\n    # Join alternates with | to create an alternation group\n    alternates_pattern = \"|\".join(escaped_alternates)\n    # Return a named group pattern with the given name\n    return rf\"(?P<{name}>{alternates_pattern})\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 124, in <module>\n  File \"<string>\", line 123, in test_13\nAssertionError\n", "passed": false}

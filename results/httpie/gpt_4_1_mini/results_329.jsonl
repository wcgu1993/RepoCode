{"task_id": 329, "prediction_id": 0, "generation": "from enum import IntEnum, unique\n\n\n@unique\nclass ExitStatus(IntEnum):\n    \"\"\"Program exit status code constants.\"\"\"\n    SUCCESS = 0\n    ERROR = 1\n    ERROR_TIMEOUT = 2\n\n    # See --check-status\n    ERROR_HTTP_3XX = 3\n    ERROR_HTTP_4XX = 4\n    ERROR_HTTP_5XX = 5\n\n    ERROR_TOO_MANY_REDIRECTS = 6\n    PLUGIN_ERROR = 7\n    # 128+2 SIGINT\n    # <http://www.tldp.org/LDP/abs/html/exitcodes.html>\n    ERROR_CTRL_C = 130\n\n\ndef http_status_to_exit_status(http_status: int, follow=False) -> ExitStatus:\n    \"\"\"\n    Translate HTTP status code to exit status code.\n\n    (Relevant only when invoked with --check-status or --download.)\n    \"\"\"\n    # If the status code is in the 200-level range (usually success), return SUCCESS\n    if 200 <= http_status < 300:\n        return ExitStatus.SUCCESS\n\n    # 3xx: Redirection\n    if 300 <= http_status < 400:\n        # If follow is True, redirects should be followed so consider success\n        if follow:\n            return ExitStatus.SUCCESS\n        else:\n            # Without follow, treat redirects as error with code ERROR_HTTP_3XX\n            return ExitStatus.ERROR_HTTP_3XX\n\n    # 4xx: Client errors\n    if 400 <= http_status < 500:\n        return ExitStatus.ERROR_HTTP_4XX\n\n    # 5xx: Server errors\n    if 500 <= http_status < 600:\n        return ExitStatus.ERROR_HTTP_5XX\n\n    # Any other status codes: treat as generic error\n    return ExitStatus.ERROR", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 102, in <module>\n  File \"<string>\", line 101, in test_1\nAssertionError\n", "passed": false}
{"task_id": 329, "prediction_id": 1, "generation": "def http_status_to_exit_status(http_status: int, follow=False) -> ExitStatus:\n    \"\"\"\n    Translate HTTP status code to exit status code.\n\n    (Relevant only when invoked with --check-status or --download.)\n\n    \"\"\"\n    if 300 <= http_status < 400:\n        # 3xx HTTP status codes - redirection\n        # If follow is True (e.g. redirections followed), treat differently?\n        return ExitStatus.ERROR_HTTP_3XX\n    elif 400 <= http_status < 500:\n        return ExitStatus.ERROR_HTTP_4XX\n    elif 500 <= http_status < 600:\n        return ExitStatus.ERROR_HTTP_5XX\n    else:\n        # For other HTTP codes (1xx, 2xx, or invalid), assume success\n        return ExitStatus.SUCCESS", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 81, in <module>\n  File \"<string>\", line 80, in test_6\nAssertionError\n", "passed": false}
{"task_id": 329, "prediction_id": 2, "generation": "from enum import IntEnum, unique\n\n\n@unique\nclass ExitStatus(IntEnum):\n    \"\"\"Program exit status code constants.\"\"\"\n    SUCCESS = 0\n    ERROR = 1\n    ERROR_TIMEOUT = 2\n\n    # See --check-status\n    ERROR_HTTP_3XX = 3\n    ERROR_HTTP_4XX = 4\n    ERROR_HTTP_5XX = 5\n\n    ERROR_TOO_MANY_REDIRECTS = 6\n    PLUGIN_ERROR = 7\n    # 128+2 SIGINT\n    # <http://www.tldp.org/LDP/abs/html/exitcodes.html>\n    ERROR_CTRL_C = 130\n\n\ndef http_status_to_exit_status(http_status: int, follow=False) -> ExitStatus:\n    \"\"\"\n    Translate HTTP status code to exit status code.\n\n    (Relevant only when invoked with --check-status or --download.)\n\n    \"\"\"\n    if http_status >= 500 and http_status < 600:\n        return ExitStatus.ERROR_HTTP_5XX\n    elif http_status >= 400 and http_status < 500:\n        return ExitStatus.ERROR_HTTP_4XX\n    elif http_status >= 300 and http_status < 400:\n        # When follow is True (i.e., redirects are followed), then\n        # probably 3xx should not be treated as an error.\n        # But since this function is relevant when invoked with --check-status or --download,\n        # and presence of a 3xx means redirect, this may be an error or not depending on follow.\n        # Let's return ERROR_TOO_MANY_REDIRECTS when follow is True to indicate too many redirects.\n        # Otherwise, return general 3xx error.\n        if follow:\n            return ExitStatus.ERROR_TOO_MANY_REDIRECTS\n        else:\n            return ExitStatus.ERROR_HTTP_3XX\n    elif http_status == 200:\n        # OK\n        return ExitStatus.SUCCESS\n    else:\n        # other HTTP status codes: treat as generic error\n        return ExitStatus.ERROR", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 101, in <module>\n  File \"<string>\", line 100, in test_1\nAssertionError\n", "passed": false}
{"task_id": 329, "prediction_id": 3, "generation": "from enum import IntEnum, unique\n\n\n@unique\nclass ExitStatus(IntEnum):\n    \"\"\"Program exit status code constants.\"\"\"\n    SUCCESS = 0\n    ERROR = 1\n    ERROR_TIMEOUT = 2\n\n    # See --check-status\n    ERROR_HTTP_3XX = 3\n    ERROR_HTTP_4XX = 4\n    ERROR_HTTP_5XX = 5\n\n    ERROR_TOO_MANY_REDIRECTS = 6\n    PLUGIN_ERROR = 7\n    # 128+2 SIGINT\n    # <http://www.tldp.org/LDP/abs/html/exitcodes.html>\n    ERROR_CTRL_C = 130\n\n\ndef http_status_to_exit_status(http_status: int, follow=False) -> ExitStatus:\n    \"\"\"\n    Translate HTTP status code to exit status code.\n\n    (Relevant only when invoked with --check-status or --download.)\n\n    \"\"\"\n    if 200 <= http_status < 300:\n        # Success 2xx\n        return ExitStatus.SUCCESS\n    elif 300 <= http_status < 400:\n        # 3xx redirect\n        # If follow redirects, no error for redirects otherwise treated as error\n        if follow:\n            # Following redirects, so not an error\n            return ExitStatus.SUCCESS\n        else:\n            return ExitStatus.ERROR_HTTP_3XX\n    elif 400 <= http_status < 500:\n        return ExitStatus.ERROR_HTTP_4XX\n    elif 500 <= http_status < 600:\n        return ExitStatus.ERROR_HTTP_5XX\n    else:\n        # Unknown/unexpected status codes treated as generic error\n        return ExitStatus.ERROR", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 98, in <module>\n  File \"<string>\", line 97, in test_1\nAssertionError\n", "passed": false}
{"task_id": 329, "prediction_id": 4, "generation": "def http_status_to_exit_status(http_status: int, follow=False) -> ExitStatus:\n    \"\"\"\n    Translate HTTP status code to exit status code.\n\n    (Relevant only when invoked with --check-status or --download.)\n\n    \"\"\"\n    if 300 <= http_status <= 399:\n        return ExitStatus.ERROR_HTTP_3XX\n    elif 400 <= http_status <= 499:\n        return ExitStatus.ERROR_HTTP_4XX\n    elif 500 <= http_status <= 599:\n        return ExitStatus.ERROR_HTTP_5XX\n    else:\n        return ExitStatus.SUCCESS", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 78, in <module>\n  File \"<string>\", line 77, in test_6\nAssertionError\n", "passed": false}

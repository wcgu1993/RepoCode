{"task_id": 326, "prediction_id": 0, "generation": "def humanize_bytes(n, precision=2):\n    \"\"\"Return a humanized string representation of a number of bytes.\n\n    Assumes `from __future__ import division`.\n\n    >>> humanize_bytes(1)\n    '1 B'\n    >>> humanize_bytes(1024, precision=1)\n    '1.0 kB'\n    >>> humanize_bytes(1024 * 123, precision=1)\n    '123.0 kB'\n    >>> humanize_bytes(1024 * 12342, precision=1)\n    '12.1 MB'\n    >>> humanize_bytes(1024 * 12342, precision=2)\n    '12.05 MB'\n    >>> humanize_bytes(1024 * 1234, precision=2)\n    '1.21 MB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=2)\n    '1.31 GB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=1)\n    '1.3 GB'\n\n    \"\"\"\n    units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    size = float(n)\n    unit_index = 0\n    while size >= 1024 and unit_index < len(units) - 1:\n        size /= 1024\n        unit_index += 1\n\n    if unit_index == 0:\n        # For bytes, no decimal places\n        return f\"{int(size)} {units[unit_index]}\"\n    else:\n        fmt_size = f\"{size:.{precision}f}\"\n        return f\"{fmt_size} {units[unit_index]}\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 537, in <module>\n  File \"<string>\", line 536, in test_27\nAssertionError\n", "passed": false}
{"task_id": 326, "prediction_id": 1, "generation": "def humanize_bytes(n, precision=2):\n    \"\"\"Return a humanized string representation of a number of bytes.\n\n    Assumes `from __future__ import division`.\n\n    >>> humanize_bytes(1)\n    '1 B'\n    >>> humanize_bytes(1024, precision=1)\n    '1.0 kB'\n    >>> humanize_bytes(1024 * 123, precision=1)\n    '123.0 kB'\n    >>> humanize_bytes(1024 * 12342, precision=1)\n    '12.1 MB'\n    >>> humanize_bytes(1024 * 12342, precision=2)\n    '12.05 MB'\n    >>> humanize_bytes(1024 * 1234, precision=2)\n    '1.21 MB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=2)\n    '1.31 GB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=1)\n    '1.3 GB'\n\n    \"\"\"\n    units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    size = float(n)\n    idx = 0\n\n    while size >= 1024 and idx < len(units) - 1:\n        size /= 1024\n        idx += 1\n\n    # Format with given precision\n    if idx == 0:\n        # For bytes, no decimal fraction needed\n        return f\"{int(size)} {units[idx]}\"\n    else:\n        fmt_str = f\"{{:.{precision}f}} {{}}\"\n        return fmt_str.format(size, units[idx])", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 539, in <module>\n  File \"<string>\", line 538, in test_27\nAssertionError\n", "passed": false}
{"task_id": 326, "prediction_id": 2, "generation": "def humanize_bytes(n, precision=2):\n    \"\"\"Return a humanized string representation of a number of bytes.\n\n    Assumes `from __future__ import division`.\n\n    >>> humanize_bytes(1)\n    '1 B'\n    >>> humanize_bytes(1024, precision=1)\n    '1.0 kB'\n    >>> humanize_bytes(1024 * 123, precision=1)\n    '123.0 kB'\n    >>> humanize_bytes(1024 * 12342, precision=1)\n    '12.1 MB'\n    >>> humanize_bytes(1024 * 12342, precision=2)\n    '12.05 MB'\n    >>> humanize_bytes(1024 * 1234, precision=2)\n    '1.21 MB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=2)\n    '1.31 GB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=1)\n    '1.3 GB'\n\n    \"\"\"\n    units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB']\n    size = float(n)\n    for unit in units:\n        if size < 1024 or unit == units[-1]:\n            if unit == 'B':\n                # For bytes, show integer without decimals\n                return f\"{int(size)} {unit}\"\n            else:\n                return f\"{size:.{precision}f} {unit}\"\n        size /= 1024", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 534, in <module>\n  File \"<string>\", line 533, in test_27\nAssertionError\n", "passed": false}
{"task_id": 326, "prediction_id": 3, "generation": "def humanize_bytes(n, precision=2):\n    \"\"\"Return a humanized string representation of a number of bytes.\n\n    Assumes `from __future__ import division`.\n\n    >>> humanize_bytes(1)\n    '1 B'\n    >>> humanize_bytes(1024, precision=1)\n    '1.0 kB'\n    >>> humanize_bytes(1024 * 123, precision=1)\n    '123.0 kB'\n    >>> humanize_bytes(1024 * 12342, precision=1)\n    '12.1 MB'\n    >>> humanize_bytes(1024 * 12342, precision=2)\n    '12.05 MB'\n    >>> humanize_bytes(1024 * 1234, precision=2)\n    '1.21 MB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=2)\n    '1.31 GB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=1)\n    '1.3 GB'\n\n    \"\"\"\n    units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB']\n    size = float(n)\n    for unit in units:\n        if size < 1024 or unit == units[-1]:\n            if unit == 'B':\n                return f\"{int(size)} {unit}\"\n            else:\n                return f\"{size:.{precision}f} {unit}\"\n        size /= 1024", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 533, in <module>\n  File \"<string>\", line 532, in test_27\nAssertionError\n", "passed": false}
{"task_id": 326, "prediction_id": 4, "generation": "def humanize_bytes(n, precision=2):\n    \"\"\"Return a humanized string representation of a number of bytes.\n\n    Assumes `from __future__ import division`.\n\n    >>> humanize_bytes(1)\n    '1 B'\n    >>> humanize_bytes(1024, precision=1)\n    '1.0 kB'\n    >>> humanize_bytes(1024 * 123, precision=1)\n    '123.0 kB'\n    >>> humanize_bytes(1024 * 12342, precision=1)\n    '12.1 MB'\n    >>> humanize_bytes(1024 * 12342, precision=2)\n    '12.05 MB'\n    >>> humanize_bytes(1024 * 1234, precision=2)\n    '1.21 MB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=2)\n    '1.31 GB'\n    >>> humanize_bytes(1024 * 1234 * 1111, precision=1)\n    '1.3 GB'\n\n    \"\"\"\n    units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    size = float(n)\n    i = 0\n    while size >= 1024 and i < len(units) - 1:\n        size /= 1024\n        i += 1\n    if i == 0:\n        # Bytes are represented as integer without decimal places\n        return f\"{int(size)} {units[i]}\"\n    else:\n        return f\"{size:.{precision}f} {units[i]}\"", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 535, in <module>\n  File \"<string>\", line 534, in test_27\nAssertionError\n", "passed": false}

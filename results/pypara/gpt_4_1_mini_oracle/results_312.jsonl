{"task_id": 312, "prediction_id": 0, "generation": "import datetime\nfrom .commons.zeitgeist import Date\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    try:\n        return datetime.date(year, month, day)\n    except ValueError:\n        # If the provided day is invalid (e.g., Feb 30), return the last day of the month:\n        last_day = datetime.date(year, month, 1).replace(day=28) + datetime.timedelta(days=4)  # go into next month\n        last_day = last_day - datetime.timedelta(days=last_day.day)  # back to last day of original month\n        return last_day", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 197, in <module>\nKeyError: \"'__name__' not in globals\"\n", "passed": false}
{"task_id": 312, "prediction_id": 1, "generation": "import datetime\nfrom .commons.zeitgeist import Date\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    try:\n        return Date(year, month, day)\n    except ValueError:\n        # If day is invalid for the given month (e.g., Feb 30), fallback to the last day of the month\n        last_day = calendar.monthrange(year, month)[1]\n        return Date(year, month, last_day)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 197, in <module>\nKeyError: \"'__name__' not in globals\"\n", "passed": false}
{"task_id": 312, "prediction_id": 2, "generation": "import datetime\nfrom .commons.zeitgeist import Date\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    try:\n        return datetime.date(year, month, day)\n    except ValueError:\n        # Handle invalid day for the given month/year by adjusting to last valid day of the month\n        if month < 1 or month > 12:\n            raise  # invalid month is not recoverable here\n\n        # Find last day of the month for that year/month\n        last_day = calendar.monthrange(year, month)[1]\n        return datetime.date(year, month, last_day)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 197, in <module>\nKeyError: \"'__name__' not in globals\"\n", "passed": false}
{"task_id": 312, "prediction_id": 3, "generation": "import datetime\nfrom .commons.zeitgeist import Date\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    # Adjust day if it is out of range for the given month/year\n    try:\n        return datetime.date(year, month, day)\n    except ValueError:\n        # Day is out of range for month; adjust to the last day of the month\n        last_day = datetime.date(year, month, 1).replace(day=28) + datetime.timedelta(days=4)  # this will be in next month\n        last_day = last_day - datetime.timedelta(days=last_day.day)  # go back to last day of current month\n        return last_day", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 197, in <module>\nKeyError: \"'__name__' not in globals\"\n", "passed": false}
{"task_id": 312, "prediction_id": 4, "generation": "import datetime\nfrom .commons.zeitgeist import Date\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    try:\n        return datetime.date(year, month, day)\n    except ValueError:\n        # For example, if day is 30 but month is 2 (which has 28 or 29 days),\n        # fall back to the last day of the month:\n        # Get last day of the given month/year:\n        last_day = (datetime.date(year, month, 1) + datetime.timedelta(days=32)).replace(day=1) - datetime.timedelta(days=1)\n        return last_day", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 197, in <module>\nKeyError: \"'__name__' not in globals\"\n", "passed": false}

{"task_id": 312, "prediction_id": 0, "generation": "import datetime\nfrom .commons.zeitgeist import Date\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    try:\n        # Try to create the date with given year, month, day first:\n        return datetime.date(year, month, day)\n    except ValueError:\n        # If day is invalid for the month (e.g. Feb 30), fallback:\n        # Get the max day of the month:\n        max_day = calendar.monthrange(year, month)[1]\n        # Construct the date with max valid day:\n        return datetime.date(year, month, max_day)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 197, in <module>\nKeyError: \"'__name__' not in globals\"\n", "passed": false}
{"task_id": 312, "prediction_id": 1, "generation": "import datetime\nfrom typing import TYPE_CHECKING\n\nif TYPE_CHECKING:\n    from .commons.zeitgeist import Date\n\n\ndef _construct_date(year: int, month: int, day: int) -> \"Date\":\n    \"\"\"\n    Constructs and returns date safely.\n\n    If the given day is invalid for the specified month and year (e.g., February 30),\n    it will adjust the day to the last valid day of that month.\n\n    :param year: Year part of the date.\n    :param month: Month part of the date.\n    :param day: Day part of the date.\n    :return: A valid Date object.\n    \"\"\"\n    try:\n        # Try to construct the date normally\n        date = datetime.date(year, month, day)\n    except ValueError:\n        # If the day is invalid for the month/year, roll back to the month's last day\n        last_day = datetime.date(year, month, 1).replace(day=28) + datetime.timedelta(days=4)  # always next month\n        last_day = last_day - datetime.timedelta(days=last_day.day)\n        date = datetime.date(year, month, last_day.day)\n    return date", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1880, in <module>\n  File \"<string>\", line 1877, in test_extra_3\nAssertionError: Expected ValueError\n", "passed": false}
{"task_id": 312, "prediction_id": 2, "generation": "import datetime\nfrom typing import TypeAlias\n\nDate: TypeAlias = datetime.date\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    try:\n        return datetime.date(year, month, day)\n    except ValueError:\n        # Handle invalid dates, for example days beyond month range (e.g., February 30)\n        # Adjust day to last day of the month if invalid day is provided\n        last_day = calendar.monthrange(year, month)[1]\n        return datetime.date(year, month, last_day)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1868, in <module>\n  File \"<string>\", line 1865, in test_extra_3\nAssertionError: Expected ValueError\n", "passed": false}
{"task_id": 312, "prediction_id": 3, "generation": "import datetime\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    try:\n        return datetime.date(year, month, day)\n    except ValueError:\n        # If the day is invalid for the month (e.g., February 30),\n        # adjust by returning the last day of the month instead.\n        last_day = calendar.monthrange(year, month)[1]\n        return datetime.date(year, month, last_day)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1865, in <module>\n  File \"<string>\", line 1862, in test_extra_3\nAssertionError: Expected ValueError\n", "passed": false}
{"task_id": 312, "prediction_id": 4, "generation": "import datetime\nfrom .commons.zeitgeist import Date\n\n\ndef _construct_date(year: int, month: int, day: int) -> Date:\n    \"\"\"\n    Constructs and returns date safely.\n    \"\"\"\n    try:\n        return datetime.date(year, month, day)\n    except ValueError:\n        # If the day is invalid (e.g., 30 Feb), fallback to the last valid day of the month\n        last_day = calendar.monthrange(year, month)[1]\n        return datetime.date(year, month, last_day)", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 197, in <module>\nKeyError: \"'__name__' not in globals\"\n", "passed": false}

{"task_id": 214, "prediction_id": 0, "generation": "def _get_run_by_other_worker(worker):\n    \"\"\"\n    This returns a set of the tasks that are being run by other worker\n    \"\"\"\n    run_by_other = set()\n    for task, status, runnable in worker._add_task_history:\n        # If runnable is False, the task is run by another worker\n        if not runnable:\n            run_by_other.add(task)\n    return run_by_other", "message": "passed", "passed": true}
{"task_id": 214, "prediction_id": 1, "generation": "def _get_run_by_other_worker(worker):\n    \"\"\"\n    This returns a set of the tasks that are being run by other worker\n    \"\"\"\n    return {task for (task, status, ext) in worker._add_task_history if status == 'PENDING' and ext}", "message": "passed", "passed": true}
{"task_id": 214, "prediction_id": 2, "generation": "def _get_run_by_other_worker(worker):\n    \"\"\"\n    This returns a set of the tasks that are being run by other worker\n    \"\"\"\n    run_by_other_worker = set()\n    add_task_history = getattr(worker, '_add_task_history', [])\n    local_tasks = getattr(worker, 'tasks', set())\n\n    for task, status, ext in add_task_history:\n        if status == 'PENDING' and task not in local_tasks:\n            run_by_other_worker.add(task)\n\n    return run_by_other_worker", "message": "passed", "passed": true}
{"task_id": 214, "prediction_id": 3, "generation": "def _get_run_by_other_worker(worker):\n    \"\"\"\n    This returns a set of the tasks that are being run by other worker\n    \"\"\"\n    run_by_other_worker = set()\n    our_tasks = getattr(worker, 'tasks', set())\n    task_history = getattr(worker, '_add_task_history', [])\n\n    for task, status, ext in task_history:\n        if status == 'PENDING' and task not in our_tasks:\n            run_by_other_worker.add(task)\n\n    return run_by_other_worker", "message": "passed", "passed": true}
{"task_id": 214, "prediction_id": 4, "generation": "def _get_run_by_other_worker(worker):\n    \"\"\"\n    This returns a set of the tasks that are being run by other worker\n    \"\"\"\n    run_by_other_worker_tasks = set()\n    for task, status, ext in getattr(worker, '_add_task_history', []):\n        if status == 'PENDING' and ext:\n            run_by_other_worker_tasks.add(task)\n    return run_by_other_worker_tasks", "message": "passed", "passed": true}

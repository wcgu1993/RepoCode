{"task_id": 217, "prediction_id": 0, "generation": "def _tasks_status(set_tasks):\n    \"\"\"\n    Given a grouped set of tasks, returns a LuigiStatusCode\n    \"\"\"\n    # Priority order based on semantics and typical failure severity\n    # Checking for scheduling errors and failures first since they represent hard failures\n    failed = set_tasks[\"failed\"]\n    scheduling_error = set_tasks[\"scheduling_error\"]\n    ever_failed = set_tasks[\"ever_failed\"]\n    run_by_other_worker = set_tasks[\"run_by_other_worker\"]\n    still_pending_ext = set_tasks[\"still_pending_ext\"]\n    upstream_scheduling_error = set_tasks[\"upstream_scheduling_error\"]\n    upstream_failure = set_tasks[\"upstream_failure\"]\n    upstream_missing_dependency = set_tasks[\"upstream_missing_dependency\"]\n    upstream_run_by_other_worker = set_tasks[\"upstream_run_by_other_worker\"]\n    not_run = set_tasks[\"not_run\"]\n\n    if scheduling_error or upstream_scheduling_error:\n        # Tasks whose scheduling failed present\n        if failed or upstream_failure:\n            # Both failed tasks and scheduling failed tasks\n            return LuigiStatusCode.FAILED_AND_SCHEDULING_FAILED\n        return LuigiStatusCode.SCHEDULING_FAILED\n\n    if failed or upstream_failure:\n        # There were failed tasks (including upstream failure)\n        return LuigiStatusCode.FAILED\n\n    if still_pending_ext or upstream_missing_dependency:\n        # Missing external dependencies detected (either directly or upstream)\n        return LuigiStatusCode.MISSING_EXT\n\n    if run_by_other_worker or upstream_run_by_other_worker:\n        # Tasks were run by other workers or had dependencies run by other workers\n        return LuigiStatusCode.NOT_RUN\n\n    # If no hard failures, check if all failed tasks eventually succeeded (i.e., \"failed\" empty but \"ever_failed\" not)\n    # This means tasks succeeded on retry.\n    if ever_failed and not failed:\n        return LuigiStatusCode.SUCCESS_WITH_RETRY\n\n    # If none of the above, all succeeded or were already done or no failed/missing tasks\n    return LuigiStatusCode.SUCCESS", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 517, in <module>\n  File \"<string>\", line 516, in test_0\n  File \"<string>\", line 460, in _tasks_status\nKeyError: 'run_by_other_worker'\n", "passed": false}
{"task_id": 217, "prediction_id": 1, "generation": "def _tasks_status(set_tasks):\n    \"\"\"\n    Given a grouped set of tasks, returns a LuigiStatusCode\n    \"\"\"\n    if set_tasks[\"failed\"] and set_tasks[\"scheduling_error\"]:\n        return LuigiStatusCode.FAILED_AND_SCHEDULING_FAILED\n    elif set_tasks[\"failed\"]:\n        return LuigiStatusCode.FAILED\n    elif set_tasks[\"scheduling_error\"]:\n        return LuigiStatusCode.SCHEDULING_FAILED\n    if set_tasks[\"not_run\"]:\n        return LuigiStatusCode.NOT_RUN\n    if set_tasks[\"still_pending_ext\"] or set_tasks[\"upstream_missing_dependency\"]:\n        return LuigiStatusCode.MISSING_EXT\n    if set_tasks[\"ever_failed\"] and not set_tasks[\"failed\"]:\n        return LuigiStatusCode.SUCCESS_WITH_RETRY\n    return LuigiStatusCode.SUCCESS", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 501, in <module>\n  File \"<string>\", line 498, in test_4\n  File \"<string>\", line 463, in _tasks_status\nKeyError: 'upstream_missing_dependency'\n", "passed": false}
{"task_id": 217, "prediction_id": 2, "generation": "def _tasks_status(set_tasks):\n    \"\"\"\n    Given a grouped set of tasks, returns a LuigiStatusCode\n    \"\"\"\n    # Assign to local variables for easier checks\n    failed = set_tasks[\"failed\"]\n    scheduling_error = set_tasks[\"scheduling_error\"]\n    still_pending_ext = set_tasks[\"still_pending_ext\"]\n    still_pending_not_ext = set_tasks[\"still_pending_not_ext\"]\n    run_by_other_worker = set_tasks[\"run_by_other_worker\"]\n    upstream_failure = set_tasks[\"upstream_failure\"]\n    upstream_missing_dependency = set_tasks[\"upstream_missing_dependency\"]\n    upstream_run_by_other_worker = set_tasks[\"upstream_run_by_other_worker\"]\n    upstream_scheduling_error = set_tasks[\"upstream_scheduling_error\"]\n    not_run = set_tasks[\"not_run\"]\n    ever_failed = set_tasks[\"ever_failed\"]\n\n    # Check for the severe failure conditions first\n\n    # 1. Scheduler failed and failed tasks\n    if scheduling_error or (failed and scheduling_error):\n        if failed and scheduling_error:\n            return LuigiStatusCode.FAILED_AND_SCHEDULING_FAILED\n        # If only scheduling failed but no failed tasks\n        return LuigiStatusCode.SCHEDULING_FAILED\n\n    # 2. Check for failed tasks (tasks that failed and did not succeed in retry)\n    if failed:\n        return LuigiStatusCode.FAILED\n\n    # 3. Check if there are no tasks that failed, but some failed previously and\n    # they all succeeded in retries\n    if ever_failed and not failed:\n        return LuigiStatusCode.SUCCESS_WITH_RETRY\n\n    # 4. Check for tasks not granted to run or upstream reasons for not running\n    if not_run or upstream_failure or upstream_missing_dependency or upstream_run_by_other_worker or upstream_scheduling_error:\n        # Specifically differentiate MISSING_EXT when there are missing external dependencies\n        if still_pending_ext or upstream_missing_dependency:\n            return LuigiStatusCode.MISSING_EXT\n        return LuigiStatusCode.NOT_RUN\n\n    # 5. If no failures and scheduling succeeded, consider SUCCESS\n    return LuigiStatusCode.SUCCESS", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 518, in <module>\n  File \"<string>\", line 517, in test_0\n  File \"<string>\", line 459, in _tasks_status\nKeyError: 'still_pending_not_ext'\n", "passed": false}
{"task_id": 217, "prediction_id": 3, "generation": "def _tasks_status(set_tasks):\n    \"\"\"\n    Given a grouped set of tasks, returns a LuigiStatusCode\n    \"\"\"\n    # Check for failed tasks and scheduling errors simultaneously\n    if set_tasks[\"failed\"] and set_tasks[\"scheduling_error\"]:\n        return LuigiStatusCode.FAILED_AND_SCHEDULING_FAILED\n\n    # Check if scheduling failed only\n    if set_tasks[\"scheduling_error\"]:\n        return LuigiStatusCode.SCHEDULING_FAILED\n\n    # Check if there are failed tasks (not retried successfully)\n    if set_tasks[\"failed\"]:\n        return LuigiStatusCode.FAILED\n\n    # Check if tasks were not run (not granted run permission by the scheduler)\n    if set_tasks[\"not_run\"]:\n        return LuigiStatusCode.NOT_RUN\n\n    # Check if there are missing external dependencies\n    if set_tasks[\"still_pending_ext\"]:\n        return LuigiStatusCode.MISSING_EXT\n\n    # Check if we had failures but all succeeded after retry\n    # That means failed is empty but ever_failed is not empty\n    if not set_tasks[\"failed\"] and set_tasks[\"ever_failed\"]:\n        return LuigiStatusCode.SUCCESS_WITH_RETRY\n\n    # Otherwise, success\n    return LuigiStatusCode.SUCCESS", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 590, in <module>\n  File \"<string>\", line 589, in test_18\nAssertionError\n", "passed": false}
{"task_id": 217, "prediction_id": 4, "generation": "def _tasks_status(set_tasks):\n    \"\"\"\n    Given a grouped set of tasks, returns a LuigiStatusCode\n    \"\"\"\n    # Check if there are any failed tasks\n    has_failed = bool(set_tasks[\"failed\"])\n    # Check if there are any scheduling errors\n    has_scheduling_error = bool(set_tasks[\"scheduling_error\"])\n    # Check if there are still pending tasks (either external or not)\n    has_still_pending = bool(set_tasks[\"still_pending_ext\"] or set_tasks[\"still_pending_not_ext\"])\n    # Check if there are tasks not granted run permission by scheduler\n    has_not_run = bool(set_tasks[\"not_run\"])\n    # Check if there are missing external dependencies\n    has_missing_ext = bool(set_tasks[\"still_pending_ext\"])\n    # Check if there are run by other worker\n    has_run_by_other_worker = bool(set_tasks[\"run_by_other_worker\"])\n    # Check if there are upstream failures\n    has_upstream_failure = bool(set_tasks[\"upstream_failure\"])\n    # Check if there are upstream missing dependencies\n    has_upstream_missing_dependency = bool(set_tasks[\"upstream_missing_dependency\"])\n    # Check if there are upstream run by other worker\n    has_upstream_run_by_other_worker = bool(set_tasks[\"upstream_run_by_other_worker\"])\n    # Check if there are upstream scheduling errors\n    has_upstream_scheduling_error = bool(set_tasks[\"upstream_scheduling_error\"])\n    # Check if there were tasks that were already done or completed\n    all_completed = not (has_failed or has_scheduling_error or has_still_pending or has_not_run)\n\n    # Map conditions to LuigiStatusCode according to documentation and logical precedence\n    if not has_failed and not has_scheduling_error and not has_still_pending and not has_not_run:\n        # No failed tasks or missing dependencies\n        return LuigiStatusCode.SUCCESS\n\n    if has_failed and not has_scheduling_error and not has_still_pending and not has_not_run:\n        # There were failed tasks but they all succeeded in a retry\n        # But since \"failed\" here is the final failed tasks (not succeeded in retry), assume the worst:\n        # Actually, we must distinguish between failed tasks and failed-but-retried tasks.\n        # But since we only have set_tasks[\"failed\"], assume this means unrecovered fails.\n        return LuigiStatusCode.FAILED\n\n    if has_failed and has_scheduling_error:\n        return LuigiStatusCode.FAILED_AND_SCHEDULING_FAILED\n\n    if not has_failed and has_scheduling_error:\n        return LuigiStatusCode.SCHEDULING_FAILED\n\n    if has_not_run:\n        return LuigiStatusCode.NOT_RUN\n\n    if has_missing_ext:\n        return LuigiStatusCode.MISSING_EXT\n\n    # If none matched by now, fallback to SUCCESS (most likely no failed or pending)\n    return LuigiStatusCode.SUCCESS", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 527, in <module>\n  File \"<string>\", line 526, in test_0\n  File \"<string>\", line 466, in _tasks_status\nKeyError: 'run_by_other_worker'\n", "passed": false}

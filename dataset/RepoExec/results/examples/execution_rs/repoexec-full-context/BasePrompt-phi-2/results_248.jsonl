{"task_id": 248, "prediction_id": 0, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    if reuse_port:\n        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    else:\n        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.bind(('127.0.0.1', 0))\n    port = sock.getsockname()[1]\n    sock.close()\n    return sock, port\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 1, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.bind(('127.0.0.1', 0))\n    if reuse_port:\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    return sock, sock.getsockname()[1]\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 2, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.bind(('127.0.0.1', 0))\n    if reuse_port:\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    return sock, sock.getsockname()[1]\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 3, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, reuse_port)\n    sock.bind(('127.0.0.1', 0))\n    port = sock.getsockname()[1]\n    sock.close()\n    return sock, port\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 4, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.bind(('127.0.0.1', 0))\n    port = sock.getsockname()[1]\n    if reuse_port:\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    return sock, port\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 5, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, reuse_port)\n    sock.bind(('127.0.0.1', 0))\n    port = sock.getsockname()[1]\n    sock.close()\n    return sock, port\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 6, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.bind(('127.0.0.1', 0))\n    port = sock.getsockname()[1]\n    if reuse_port:\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    return sock, port\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 7, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, reuse_port)\n    sock.bind(('127.0.0.1', 0))\n    port = sock.getsockname()[1]\n    sock.close()\n    return sock, port\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 8, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.bind(('127.0.0.1', 0))\n    if reuse_port:\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    sock.listen(1)\n    port = sock.getsockname()[1]\n    sock.close()\n    return sock, port\n", "message": "passed", "passed": true}
{"task_id": 248, "prediction_id": 9, "generation": "def bind_unused_port(reuse_port: bool = False) -> Tuple[socket.socket, int]:\n    \"\"\"Binds a server socket to an available port on localhost.\n\n    Returns a tuple (socket, port).\n\n    .. versionchanged:: 4.4\n    Always binds to ``127.0.0.1`` without resolving the name\n    ``localhost``.\n    \"\"\"\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.bind(('127.0.0.1', 0))\n    port = sock.getsockname()[1]\n    if reuse_port:\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    return sock, port\n", "message": "passed", "passed": true}

{"task_id": 215, "prediction_id": 0, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(lambda: collections.defaultdict(list))\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name].append(task)\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 1, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(dict)\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name] = task\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 2, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(lambda: collections.defaultdict(list))\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name].append(task)\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 3, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(lambda: collections.defaultdict(list))\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name].append(task)\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 4, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(lambda: collections.defaultdict(list))\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name].append(task)\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 5, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(lambda: collections.defaultdict(list))\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name].append(task)\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 6, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(dict)\n    for task_name, tasks in task_dict.items():\n        for task in tasks:\n            grouped_tasks[task.status][task_name] = task\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 7, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(lambda: collections.defaultdict(list))\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name].append(task)\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 8, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(dict)\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name] = task\n    return grouped_tasks\n", "message": "passed", "passed": true}
{"task_id": 215, "prediction_id": 9, "generation": "def _group_tasks_by_name_and_status(task_dict):\n    \"\"\"\n    Takes a dictionary with sets of tasks grouped by their status and\n    returns a dictionary with dictionaries with an array of tasks grouped by\n    their status and task name\n    \"\"\"\n    grouped_tasks = collections.defaultdict(lambda: collections.defaultdict(list))\n    for task_name, task_set in task_dict.items():\n        for task in task_set:\n            grouped_tasks[task.status][task_name].append(task)\n    return grouped_tasks\n", "message": "passed", "passed": true}

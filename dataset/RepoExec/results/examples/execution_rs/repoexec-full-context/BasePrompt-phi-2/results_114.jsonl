{"task_id": 114, "prediction_id": 0, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if isinstance(value, dict):\n            default[key] = merge_configs(default.get(key, {}), value)\n        else:\n            default[key] = value\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 1, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if key in default:\n            if isinstance(default[key], dict) and isinstance(value, dict):\n                merge_configs(default[key], value)\n            else:\n                default[key] = value\n        else:\n            default[key] = copy.deepcopy(value)\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 2, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if isinstance(value, dict):\n            if key in default:\n                default[key] = merge_configs(default[key], value)\n            else:\n                default[key] = copy.deepcopy(value)\n        else:\n            default[key] = copy.deepcopy(value)\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 3, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if key in default:\n            if isinstance(default[key], dict) and isinstance(value, dict):\n                merge_configs(default[key], value)\n            else:\n                default[key] = value\n        else:\n            default[key] = copy.deepcopy(value)\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 4, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if isinstance(value, dict):\n            default[key] = merge_configs(default.get(key, {}), value)\n        else:\n            default[key] = value\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 5, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if isinstance(value, dict):\n            default[key] = merge_configs(default.get(key, {}), value)\n        else:\n            default[key] = value\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 6, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if isinstance(value, dict):\n            if key in default:\n                default[key] = merge_configs(default[key], value)\n            else:\n                default[key] = copy.deepcopy(value)\n        else:\n            default[key] = copy.deepcopy(value)\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 7, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if isinstance(value, dict):\n            default[key] = merge_configs(default.get(key, {}), value)\n        else:\n            default[key] = value\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 8, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if isinstance(value, dict):\n            if key not in default:\n                default[key] = {}\n            merge_configs(default[key], value)\n        else:\n            default[key] = value\n    return default\n", "message": "passed", "passed": true}
{"task_id": 114, "prediction_id": 9, "generation": "def merge_configs(default, overwrite):\n    \"\"\"Recursively update a dict with the key/value pair of another.\n\n    Dict values that are dictionaries themselves will be updated, whilst\n    preserving existing keys.\n    \"\"\"\n    for key, value in overwrite.items():\n        if isinstance(value, dict):\n            if key in default:\n                default[key] = merge_configs(default[key], value)\n            else:\n                default[key] = copy.deepcopy(value)\n        else:\n            default[key] = copy.deepcopy(value)\n    return default\n", "message": "passed", "passed": true}

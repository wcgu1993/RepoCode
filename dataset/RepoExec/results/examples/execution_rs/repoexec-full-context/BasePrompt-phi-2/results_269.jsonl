{"task_id": 269, "prediction_id": 0, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, bytes):\n        return to_unicode(obj)\n    if isinstance(obj, (list, tuple)):\n        return [recursive_unicode(v) for v in obj]\n    if isinstance(obj, dict):\n        return {k: recursive_unicode(v) for k, v in obj.items()}\n    return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 439, in <module>\n  File \"<string>\", line 438, in test_13\nAssertionError\n", "passed": false}
{"task_id": 269, "prediction_id": 1, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, (bytes, bytearray)):\n        return to_unicode(obj)\n    elif isinstance(obj, dict):\n        return {recursive_unicode(k): recursive_unicode(v) for k, v in obj.items()}\n    elif isinstance(obj, (list, tuple)):\n        return [recursive_unicode(v) for v in obj]\n    else:\n        return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 448, in <module>\n  File \"<string>\", line 447, in test_15\nAssertionError\n", "passed": false}
{"task_id": 269, "prediction_id": 2, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, (list, tuple)):\n        return [recursive_unicode(v) for v in obj]\n    if isinstance(obj, dict):\n        return {recursive_unicode(k): recursive_unicode(v) for k, v in obj.items()}\n    if isinstance(obj, bytes):\n        return to_unicode(obj)\n    return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 447, in <module>\n  File \"<string>\", line 446, in test_15\nAssertionError\n", "passed": false}
{"task_id": 269, "prediction_id": 3, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, (bytes, bytearray)):\n        return to_unicode(obj)\n    elif isinstance(obj, (list, tuple)):\n        return type(obj)(recursive_unicode(item) for item in obj)\n    elif isinstance(obj, dict):\n        return type(obj)((recursive_unicode(key), recursive_unicode(value))\n                         for key, value in obj.items())\n    else:\n        return obj\n", "message": "passed", "passed": true}
{"task_id": 269, "prediction_id": 4, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, bytes):\n        return to_unicode(obj)\n    elif isinstance(obj, (list, tuple)):\n        return [recursive_unicode(v) for v in obj]\n    elif isinstance(obj, dict):\n        return {k: recursive_unicode(v) for k, v in obj.items()}\n    else:\n        return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 440, in <module>\n  File \"<string>\", line 439, in test_13\nAssertionError\n", "passed": false}
{"task_id": 269, "prediction_id": 5, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, bytes):\n        return to_unicode(obj)\n    elif isinstance(obj, (list, tuple)):\n        return [recursive_unicode(x) for x in obj]\n    elif isinstance(obj, dict):\n        return {recursive_unicode(k): recursive_unicode(v) for k, v in obj.items()}\n    else:\n        return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 448, in <module>\n  File \"<string>\", line 447, in test_15\nAssertionError\n", "passed": false}
{"task_id": 269, "prediction_id": 6, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, (bytes, bytearray)):\n        return to_unicode(obj)\n    elif isinstance(obj, dict):\n        return {recursive_unicode(k): recursive_unicode(v) for k, v in obj.items()}\n    elif isinstance(obj, (list, tuple)):\n        return [recursive_unicode(v) for v in obj]\n    else:\n        return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 448, in <module>\n  File \"<string>\", line 447, in test_15\nAssertionError\n", "passed": false}
{"task_id": 269, "prediction_id": 7, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, bytes):\n        return to_unicode(obj)\n    elif isinstance(obj, (list, tuple)):\n        return [recursive_unicode(item) for item in obj]\n    elif isinstance(obj, dict):\n        return {recursive_unicode(key): recursive_unicode(value) for key, value in obj.items()}\n    else:\n        return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 448, in <module>\n  File \"<string>\", line 447, in test_15\nAssertionError\n", "passed": false}
{"task_id": 269, "prediction_id": 8, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, (bytes, bytearray)):\n        return to_unicode(obj)\n    if isinstance(obj, (list, tuple)):\n        return [recursive_unicode(x) for x in obj]\n    if isinstance(obj, dict):\n        return {recursive_unicode(k): recursive_unicode(v) for k, v in obj.items()}\n    return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 447, in <module>\n  File \"<string>\", line 446, in test_15\nAssertionError\n", "passed": false}
{"task_id": 269, "prediction_id": 9, "generation": "def recursive_unicode(obj: Any) -> Any:\n    \"\"\"Walks a simple data structure, converting byte strings to unicode.\n\n    Supports lists, tuples, and dictionaries.\n    \"\"\"\n    if isinstance(obj, bytes):\n        return to_unicode(obj)\n    if isinstance(obj, (list, tuple)):\n        return [recursive_unicode(item) for item in obj]\n    if isinstance(obj, dict):\n        return {recursive_unicode(key): recursive_unicode(value) for key, value in obj.items()}\n    return obj\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 447, in <module>\n  File \"<string>\", line 446, in test_15\nAssertionError\n", "passed": false}

{"task_id": 206, "prediction_id": 0, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    paths = set(paths)\n    if not paths:\n        return paths\n    if not filesystem.exists(glob):\n        return paths\n    if filesystem.isdir(glob):\n        paths.update(filesystem.glob(glob + '/**/*', recursive=True))\n    else:\n        paths.update(filesystem.glob(glob))\n    return paths\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 807, in <module>\n  File \"<string>\", line 803, in test_12\nAssertionError\n", "passed": false}
{"task_id": 206, "prediction_id": 1, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    existing = set()\n    for path in paths:\n        if filesystem.exists(path):\n            existing.add(path)\n    return existing\n", "message": "passed", "passed": true}
{"task_id": 206, "prediction_id": 2, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    existing = set()\n    for path in paths:\n        if filesystem.exists(path):\n            existing.add(path)\n    return existing\n", "message": "passed", "passed": true}
{"task_id": 206, "prediction_id": 3, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    existing = set()\n    for path in paths:\n        if filesystem.exists(path):\n            existing.add(path)\n    return existing\n", "message": "passed", "passed": true}
{"task_id": 206, "prediction_id": 4, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    existing = set()\n    for path in paths:\n        if filesystem.exists(path):\n            existing.add(path)\n    return existing\n", "message": "passed", "passed": true}
{"task_id": 206, "prediction_id": 5, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    if not filesystem.exists(glob):\n        return set()\n    return set(path for path in filesystem.glob(glob) if path in paths)\n", "message": "passed", "passed": true}
{"task_id": 206, "prediction_id": 6, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    existing = set()\n    for path in paths:\n        if filesystem.exists(path):\n            existing.add(path)\n    return existing\n", "message": "passed", "passed": true}
{"task_id": 206, "prediction_id": 7, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    existing = set()\n    for path in paths:\n        if filesystem.exists(path):\n            existing.add(path)\n    return existing\n", "message": "passed", "passed": true}
{"task_id": 206, "prediction_id": 8, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    existing = set()\n    for path in paths:\n        if filesystem.exists(path):\n            existing.add(path)\n    return existing\n", "message": "passed", "passed": true}
{"task_id": 206, "prediction_id": 9, "generation": "def _list_existing(filesystem, glob, paths):\n    \"\"\"\n    Get all the paths that do in fact exist. Returns a set of all existing paths.\n\n    Takes a luigi.target.FileSystem object, a str which represents a glob and\n    a list of strings representing paths.\n    \"\"\"\n    existing = set()\n    for path in paths:\n        if filesystem.exists(path):\n            existing.add(path)\n    return existing\n", "message": "passed", "passed": true}

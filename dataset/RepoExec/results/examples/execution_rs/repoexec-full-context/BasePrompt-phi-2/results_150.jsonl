{"task_id": 150, "prediction_id": 0, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    assert len(data) == BLOCK_SIZE_BYTES\n    assert len(expanded_key) in [176, 208, 240]\n\n    # Step 1: SubBytes\n    data = sub_bytes_inv(data)\n\n    # Step 2: ShiftRows\n    data = shift_rows_inv(data)\n\n    # Step 3: MixColumns\n    data = mix_columns_inv(data)\n\n    # Step 4: AddRoundKey\n    data = xor(data, expanded_key[:BLOCK_SIZE_BYTES])\n\n    return data\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 422, in <module>\n  File \"<string>\", line 419, in test_2\n  File \"<string>\", line 203, in aes_decrypt\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 1, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    assert len(data) == BLOCK_SIZE_BYTES\n    assert len(expanded_key) in (176, 208, 240)\n\n    # Initialize state\n    state = [0] * BLOCK_SIZE_BYTES\n\n    # Round 1\n    state = mix_columns(state, MIX_COLUMN_MATRIX)\n    state = shift_rows(state, ROUND_ROUNDS)\n    state = sub_bytes(state, SUB_BYTES)\n    state = xor(state, expanded_key[:BLOCK_SIZE_BYTES])\n\n    # Rounds 2-15\n    for round_num in range(1, ROUND_ROUNDS):\n        state = mix_columns(state, MIX_COLUMN_MATRIX)\n        state = shift_rows(state, ROUND_ROUNDS - round_num)\n        state = sub_bytes(state, SUB_BYTES)\n        state = xor(state, expanded_key[round_num * BLOCK_SIZE_BYTES:(round_num + 1) * BLOCK_SIZE_BYTES])\n\n    # Round 16\n    state = mix_columns(state, MIX_COLUMN_MATRIX)\n    state = shift_rows(state, ROUND_ROUNDS)\n    state = sub_bytes(state, SUB_BYTES)\n    state = xor(state, expanded_key[ROUND_ROUNDS * BLOCK_SIZE_BYTES:])\n\n    return state\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 432, in <module>\n  File \"<string>\", line 429, in test_2\n  File \"<string>\", line 203, in aes_decrypt\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 2, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    assert len(data) == BLOCK_SIZE_BYTES\n    assert len(expanded_key) in (176, 208, 240)\n\n    # Initialize state\n    state = [0] * BLOCK_SIZE_BYTES\n    state[0] = bytes_to_intlist(data[0:4])\n    state[1] = bytes_to_intlist(data[4:8])\n    state[2] = bytes_to_intlist(data[8:12])\n    state[3] = bytes_to_intlist(data[12:16])\n\n    # SubBytes\n    state = sub_bytes(state)\n\n    # ShiftRows\n    state = shift_rows(state)\n\n    # MixColumns\n    state = mix_columns(state)\n\n    # AddRoundKey\n    state = add_round_key(state, expanded_key[0:4])\n\n    # SubBytes\n    state = sub_bytes(state)\n\n    # ShiftRows\n    state = shift_rows(state)\n\n    # MixColumns\n    state = mix_columns(state)\n\n    # AddRoundKey\n    state = add_round_key(state, expanded_key[4:8])\n\n    # SubBytes\n    state = sub_bytes(state)\n\n    # ShiftRows\n    state = shift_rows(state)\n\n    # MixColumns\n    state = mix_columns(state)\n\n    # AddRoundKey\n    state = add_round_key(state, expanded_key[8:12])\n\n    # SubBytes\n    state = sub_bytes(state)\n\n    # ShiftRows\n    state = shift_rows(state)\n\n    # MixColumns\n    state = mix_columns(state)\n\n    # AddRoundKey\n    state = add_round_key(state, expanded_key[12:16])\n\n    return intlist_to_bytes(state)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 465, in <module>\n  File \"<string>\", line 462, in test_2\n  File \"<string>\", line 203, in aes_decrypt\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 3, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    state = [0] * 16\n    for i in range(4):\n        for j in range(4):\n            state[i * 4 + j] = data[i * 4 + j] ^ expanded_key[i * 4 + j]\n    return state\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 427, in <module>\n  File \"<string>\", line 422, in test_3\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 4, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    assert len(data) == BLOCK_SIZE_BYTES\n    assert len(expanded_key) in [176, 208, 240]\n\n    # Step 1: SubBytes\n    data = sub_bytes_inv(data)\n\n    # Step 2: ShiftRows\n    data = shift_rows_inv(data)\n\n    # Step 3: MixColumns\n    data = mix_columns(data, MIX_COLUMN_MATRIX)\n\n    # Step 4: AddRoundKey\n    data = xor(data, expanded_key)\n\n    return data\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 422, in <module>\n  File \"<string>\", line 419, in test_2\n  File \"<string>\", line 203, in aes_decrypt\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 5, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    assert len(data) == BLOCK_SIZE_BYTES\n    assert len(expanded_key) in (176, 208, 240)\n\n    # Pad the data\n    if len(data) < BLOCK_SIZE_BYTES:\n        data += [0] * (BLOCK_SIZE_BYTES - len(data))\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # MixColumns\n    data = mix_columns(data)\n\n    # AddRoundKey\n    data = add_round_key(data, expanded_key)\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # AddRoundKey\n    data = add_round_key(data, expanded_key)\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # AddRoundKey\n    data = add_round_key(data, expanded_key)\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # AddRoundKey\n    data = add_round_key(data, expanded_key)\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # AddRoundKey\n    data = add_round_key(data, expanded_key)\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # AddRoundKey\n    data = add_round_key(data, expanded_key)\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # AddRoundKey\n    data = add_round_key(data, expanded_key)\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # AddRoundKey\n    data = add_round_", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 486, in <module>\n  File \"<string>\", line 483, in test_2\n  File \"<string>\", line 203, in aes_decrypt\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 6, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    state = [0] * 16\n    state[0] = data[0]\n    state[1] = data[1]\n    state[2] = data[2]\n    state[3] = data[3]\n\n    for i in range(4):\n        for j in range(4):\n            state[i * 4 + j] ^= expanded_key[(i * 4 + j) % len(expanded_key)]\n\n    state = shift_rows_inv(state)\n    state = mix_columns_inv(state)\n    state = sub_bytes_inv(state)\n\n    return state\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 421, in <module>\n  File \"<string>\", line 418, in test_2\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 7, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    assert len(data) == BLOCK_SIZE_BYTES\n    assert len(expanded_key) in (176, 208, 240)\n\n    # Step 1: SubBytes\n    data = sub_bytes_inv(data)\n\n    # Step 2: ShiftRows\n    data = shift_rows_inv(data)\n\n    # Step 3: MixColumns\n    data = mix_columns(data, MIX_COLUMN_MATRIX)\n\n    # Step 4: AddRoundKey\n    data = xor(data, expanded_key)\n\n    return data\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 422, in <module>\n  File \"<string>\", line 419, in test_2\n  File \"<string>\", line 203, in aes_decrypt\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 8, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    assert len(data) == BLOCK_SIZE_BYTES\n    assert len(expanded_key) in (176, 208, 240)\n\n    # Step 1: SubBytes\n    data = sub_bytes_inv(data)\n\n    # Step 2: ShiftRows\n    data = shift_rows_inv(data)\n\n    # Step 3: MixColumns\n    data = mix_columns(data, MIX_COLUMN_MATRIX)\n\n    # Step 4: AddRoundKey\n    data = xor(data, expanded_key[:BLOCK_SIZE_BYTES])\n\n    return data\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 422, in <module>\n  File \"<string>\", line 419, in test_2\n  File \"<string>\", line 203, in aes_decrypt\nAssertionError\n", "passed": false}
{"task_id": 150, "prediction_id": 9, "generation": "def aes_decrypt(data, expanded_key):\n    \"\"\"\n    Decrypt one block with aes\n\n    @param {int[]} data          16-Byte cipher\n    @param {int[]} expanded_key  176/208/240-Byte expanded key\n    @returns {int[]}             16-Byte state\n    \"\"\"\n    assert len(data) == BLOCK_SIZE_BYTES\n    assert len(expanded_key) in (176, 208, 240)\n\n    # SubBytes\n    data = sub_bytes(data)\n\n    # ShiftRows\n    data = shift_rows(data)\n\n    # MixColumns\n    data = mix_columns(data)\n\n    # AddRoundKey\n    data = add_round_key(data, expanded_key[:16])\n\n    return data\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 422, in <module>\n  File \"<string>\", line 419, in test_2\n  File \"<string>\", line 203, in aes_decrypt\nAssertionError\n", "passed": false}

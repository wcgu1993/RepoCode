{"task_id": 276, "prediction_id": 0, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\"Invalid HTTP version: %r\" % line)\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1131, in <module>\n  File \"<string>\", line 1130, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 1, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\"Invalid HTTP version: %r\" % line)\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1131, in <module>\n  File \"<string>\", line 1130, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 2, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\"Invalid HTTP version: %r\" % line)\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1131, in <module>\n  File \"<string>\", line 1130, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 3, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\n            \"Malformed HTTP request line: '{}'\".format(line)\n        )\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1133, in <module>\n  File \"<string>\", line 1132, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Malformed HTTP request line: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 4, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\"Invalid HTTP version: %r\" % line)\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1131, in <module>\n  File \"<string>\", line 1130, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 5, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\"Invalid HTTP version in request line: %r\" % line)\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1131, in <module>\n  File \"<string>\", line 1130, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version in request line: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 6, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\"Invalid HTTP version: %r\" % line)\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1131, in <module>\n  File \"<string>\", line 1130, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 7, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\"Invalid HTTP version: %r\" % line)\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1131, in <module>\n  File \"<string>\", line 1130, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 8, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\n            \"Invalid HTTP version: %r\" % line\n        )\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1133, in <module>\n  File \"<string>\", line 1132, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version: 'GET /foo HTTP/1.1'\n", "passed": false}
{"task_id": 276, "prediction_id": 9, "generation": "def parse_request_start_line(line: str) -> RequestStartLine:\n    \"\"\"Returns a (method, path, version) tuple for an HTTP 1.x request line.\n\n    The response is a `collections.namedtuple`.\n\n    >>> parse_request_start_line(\"GET /foo HTTP/1.1\")\n    RequestStartLine(method='GET', path='/foo', version='HTTP/1.1')\n    \"\"\"\n    match = _http_version_re.match(line)\n    if not match:\n        raise HTTPInputError(\"Invalid HTTP version: %r\" % line)\n    method, path, version = line.split()\n    return RequestStartLine(method, path, version)\n", "message": "failed: Traceback (most recent call last):\n  File \"/codegendata/human-eval/human_eval/execution.py\", line 57, in unsafe_execute\n    exec(check_program, exec_globals)\n  File \"<string>\", line 1131, in <module>\n  File \"<string>\", line 1130, in test_0\n  File \"<string>\", line 895, in parse_request_start_line\nHTTPInputError: Invalid HTTP version: 'GET /foo HTTP/1.1'\n", "passed": false}

[{"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/wsgi/tutorial001.py", "function": "flask_main", "line_number": 9, "body": "def flask_main():\n    name = request.args.get(\"name\", \"World\")\n    return f\"Hello, {escape(name)} from Flask!\"", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/sql_databases/sql_app/tests/test_sql_app.py", "function": "test_create_user", "line_number": 32, "body": "def test_create_user():\n    response = client.post(\n        \"/users/\",\n        json={\"email\": \"deadpool@example.com\", \"password\": \"chimichangas4life\"},\n    )\n    assert response.status_code == 200, response.text\n    data = response.json()\n    assert data[\"email\"] == \"deadpool@example.com\"\n    assert \"id\" in data\n    user_id = data[\"id\"]\n\n    response = client.get(f\"/users/{user_id}\")\n    assert response.status_code == 200, response.text\n    data = response.json()\n    assert data[\"email\"] == \"deadpool@example.com\"\n    assert data[\"id\"] == user_id", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/openapi_callbacks/tutorial001.py", "function": "invoice_notification", "line_number": 31, "body": "def invoice_notification(body: InvoiceEvent):\n    pass", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/dependency_testing/tutorial001.py", "function": "test_override_in_items", "line_number": 33, "body": "def test_override_in_items():\n    response = client.get(\"/items/\")\n    assert response.status_code == 200\n    assert response.json() == {\n        \"message\": \"Hello Items!\",\n        \"params\": {\"q\": None, \"skip\": 5, \"limit\": 10},\n    }", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/dependency_testing/tutorial001.py", "function": "test_override_in_items_with_q", "line_number": 42, "body": "def test_override_in_items_with_q():\n    response = client.get(\"/items/?q=foo\")\n    assert response.status_code == 200\n    assert response.json() == {\n        \"message\": \"Hello Items!\",\n        \"params\": {\"q\": \"foo\", \"skip\": 5, \"limit\": 10},\n    }", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/dependency_testing/tutorial001.py", "function": "test_override_in_items_with_params", "line_number": 51, "body": "def test_override_in_items_with_params():\n    response = client.get(\"/items/?q=foo&skip=100&limit=200\")\n    assert response.status_code == 200\n    assert response.json() == {\n        \"message\": \"Hello Items!\",\n        \"params\": {\"q\": \"foo\", \"skip\": 5, \"limit\": 10},\n    }", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/app_testing/test_main_b.py", "function": "test_read_item", "line_number": 8, "body": "def test_read_item():\n    response = client.get(\"/items/foo\", headers={\"X-Token\": \"coneofsilence\"})\n    assert response.status_code == 200\n    assert response.json() == {\n        \"id\": \"foo\",\n        \"title\": \"Foo\",\n        \"description\": \"There goes my hero\",\n    }", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/app_testing/test_main_b.py", "function": "test_read_item_bad_token", "line_number": 18, "body": "def test_read_item_bad_token():\n    response = client.get(\"/items/foo\", headers={\"X-Token\": \"hailhydra\"})\n    assert response.status_code == 400\n    assert response.json() == {\"detail\": \"Invalid X-Token header\"}", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/app_testing/test_main_b.py", "function": "test_read_inexistent_item", "line_number": 24, "body": "def test_read_inexistent_item():\n    response = client.get(\"/items/baz\", headers={\"X-Token\": \"coneofsilence\"})\n    assert response.status_code == 404\n    assert response.json() == {\"detail\": \"Item not found\"}", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/app_testing/test_main_b.py", "function": "test_create_item", "line_number": 30, "body": "def test_create_item():\n    response = client.post(\n        \"/items/\",\n        headers={\"X-Token\": \"coneofsilence\"},\n        json={\"id\": \"foobar\", \"title\": \"Foo Bar\", \"description\": \"The Foo Barters\"},\n    )\n    assert response.status_code == 200\n    assert response.json() == {\n        \"id\": \"foobar\",\n        \"title\": \"Foo Bar\",\n        \"description\": \"The Foo Barters\",\n    }", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/app_testing/test_main_b.py", "function": "test_create_item_bad_token", "line_number": 44, "body": "def test_create_item_bad_token():\n    response = client.post(\n        \"/items/\",\n        headers={\"X-Token\": \"hailhydra\"},\n        json={\"id\": \"bazz\", \"title\": \"Bazz\", \"description\": \"Drop the bazz\"},\n    )\n    assert response.status_code == 400\n    assert response.json() == {\"detail\": \"Invalid X-Token header\"}", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/app_testing/test_main_b.py", "function": "test_create_existing_item", "line_number": 54, "body": "def test_create_existing_item():\n    response = client.post(\n        \"/items/\",\n        headers={\"X-Token\": \"coneofsilence\"},\n        json={\n            \"id\": \"foo\",\n            \"title\": \"The Foo ID Stealers\",\n            \"description\": \"There goes my stealer\",\n        },\n    )\n    assert response.status_code == 400\n    assert response.json() == {\"detail\": \"Item already exists\"}", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/docs_src/app_testing/tutorial003.py", "function": "test_read_items", "line_number": 20, "body": "def test_read_items():\n    with TestClient(app) as client:\n        response = client.get(\"/items/foo\")\n        assert response.status_code == 200\n        assert response.json() == {\"name\": \"Fighters\"}", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/fastapi/scripts/gitter_releases_bot.py", "function": "get_gitter_message", "line_number": 41, "body": "def get_gitter_message(release_text: str):\n    text = f\"\"\"\n    New release! :tada: :rocket:\n    (by FastAPI bot)\n\n    ## {tag_name}\n    \"\"\"\n    text = inspect.cleandoc(text) + \"\\n\\n\" + release_text\n    return text", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/fastapi/scripts/gitter_releases_bot.py", "function": "main", "line_number": 60, "body": "def main():\n    release_text = get_github_release_text(tag_name=tag_name)\n    text = get_gitter_message(release_text=release_text)\n    send_gitter_message(text=text)", "is_method": false, "function_description": "Not sure"}]
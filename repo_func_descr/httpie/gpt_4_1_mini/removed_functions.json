[{"file": "./dataset/RepoExec/test-apps/httpie/httpie/uploads.py", "function": "new_read", "line_number": 80, "body": "def new_read(*args):\n                chunk = orig_read(*args)\n                body_read_callback(chunk)\n                return chunk", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/models.py", "function": "iter_body", "line_number": 11, "body": "def iter_body(self, chunk_size: int) -> Iterable[bytes]:\n        \"\"\"Return an iterator over the body.\"\"\"\n        raise NotImplementedError()", "is_method": true, "class_name": "HTTPMessage", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/models.py", "function": "iter_lines", "line_number": 15, "body": "def iter_lines(self, chunk_size: int) -> Iterable[bytes]:\n        \"\"\"Return an iterator over the body yielding (`line`, `line_feed`).\"\"\"\n        raise NotImplementedError()", "is_method": true, "class_name": "HTTPMessage", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/models.py", "function": "headers", "line_number": 20, "body": "def headers(self) -> str:\n        \"\"\"Return a `str` with the message's headers.\"\"\"\n        raise NotImplementedError()", "is_method": true, "class_name": "HTTPMessage", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/models.py", "function": "encoding", "line_number": 25, "body": "def encoding(self) -> Optional[str]:\n        \"\"\"Return a `str` with the message's encoding, if known.\"\"\"\n        raise NotImplementedError()", "is_method": true, "class_name": "HTTPMessage", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/models.py", "function": "body", "line_number": 30, "body": "def body(self) -> bytes:\n        \"\"\"Return a `bytes` with the message's body.\"\"\"\n        raise NotImplementedError()", "is_method": true, "class_name": "HTTPMessage", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/core.py", "function": "separate", "line_number": 139, "body": "def separate():\n        getattr(env.stdout, 'buffer', env.stdout).write(MESSAGE_SEPARATOR_BYTES)", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/__main__.py", "function": "main", "line_number": 8, "body": "def main():\n    try:\n        from .core import main\n        exit_status = main()\n    except KeyboardInterrupt:\n        from httpie.status import ExitStatus\n        exit_status = ExitStatus.ERROR_CTRL_C\n\n    sys.exit(exit_status.value)", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/output/streams.py", "function": "iter_body", "line_number": 53, "body": "def iter_body(self) -> Iterable[bytes]:\n        \"\"\"Return an iterator over the message body.\"\"\"\n        raise NotImplementedError()", "is_method": true, "class_name": "BaseStream", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/plugins/base.py", "function": "get_auth", "line_number": 56, "body": "def get_auth(self, username=None, password=None):\n        \"\"\"\n        If `auth_parse` is set to `True`, then `username`\n        and `password` contain the parsed credentials.\n\n        Use `self.raw_auth` to access the raw value passed through\n        `--auth, -a`.\n\n        Return a ``requests.auth.AuthBase`` subclass instance.\n\n        \"\"\"\n        raise NotImplementedError()", "is_method": true, "class_name": "AuthPlugin", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/plugins/base.py", "function": "get_adapter", "line_number": 85, "body": "def get_adapter(self):\n        \"\"\"\n        Return a ``requests.adapters.BaseAdapter`` subclass instance to be\n        mounted to ``self.prefix``.\n\n        \"\"\"\n        raise NotImplementedError()", "is_method": true, "class_name": "TransportPlugin", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/plugins/base.py", "function": "convert", "line_number": 107, "body": "def convert(self, content_bytes):\n        raise NotImplementedError", "is_method": true, "class_name": "ConverterPlugin", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/httpie/httpie/plugins/base.py", "function": "supports", "line_number": 111, "body": "def supports(cls, mime):\n        raise NotImplementedError", "is_method": true, "class_name": "ConverterPlugin", "function_description": "Not Implemented"}]
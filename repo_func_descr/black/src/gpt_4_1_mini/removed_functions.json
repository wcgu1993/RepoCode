[{"file": "./dataset/RepoExec/test-apps/black/src/black/__init__.py", "function": "patched_main", "line_number": 6604, "body": "def patched_main() -> None:\n    freeze_support()\n    patch_click()\n    main()", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/black/src/black/__init__.py", "function": "do_splitter_match", "line_number": 3353, "body": "def do_splitter_match(self, line: Line) -> TMatchResult:\n        \"\"\"\n        BaseStringSplitter asks its clients to override this method instead of\n        `StringTransformer.do_match(...)`.\n\n        Follows the same protocol as `StringTransformer.do_match(...)`.\n\n        Refer to `help(StringTransformer.do_match)` for more information.\n        \"\"\"", "is_method": true, "class_name": "BaseStringSplitter", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/black/src/black/__init__.py", "function": "is_valid_index", "line_number": 4565, "body": "def is_valid_index(idx: int) -> bool:\n        \"\"\"\n        Returns:\n            True iff @idx is positive AND seq[@idx] does NOT raise an\n            IndexError.\n        \"\"\"\n        return 0 <= idx < len(seq)", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/black/src/blib2to3/pytree.py", "function": "prefix", "line_number": 99, "body": "def prefix(self) -> Text:\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/black/src/blib2to3/pytree.py", "function": "_eq", "line_number": 102, "body": "def _eq(self: _P, other: _P) -> bool:\n        \"\"\"\n        Compare two nodes for equality.\n\n        This is called by __eq__ and __ne__.  It is only called if the two nodes\n        have the same type.  This must be implemented by the concrete subclass.\n        Nodes should be considered equal if they have the same structure,\n        ignoring the prefix string and other context information.\n        \"\"\"\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/black/src/blib2to3/pytree.py", "function": "clone", "line_number": 113, "body": "def clone(self: _P) -> _P:\n        \"\"\"\n        Return a cloned (deep) copy of self.\n\n        This must be implemented by the concrete subclass.\n        \"\"\"\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/black/src/blib2to3/pytree.py", "function": "post_order", "line_number": 121, "body": "def post_order(self) -> Iterator[NL]:\n        \"\"\"\n        Return a post-order iterator for the tree.\n\n        This must be implemented by the concrete subclass.\n        \"\"\"\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/black/src/blib2to3/pytree.py", "function": "pre_order", "line_number": 129, "body": "def pre_order(self) -> Iterator[NL]:\n        \"\"\"\n        Return a pre-order iterator for the tree.\n\n        This must be implemented by the concrete subclass.\n        \"\"\"\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/black/src/blib2to3/pytree.py", "function": "_submatch", "line_number": 535, "body": "def _submatch(self, node, results=None) -> bool:\n        raise NotImplementedError", "is_method": true, "class_name": "BasePattern", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/black/src/blib2to3/pgen2/literals.py", "function": "test", "line_number": 58, "body": "def test() -> None:\n    for i in range(256):\n        c = chr(i)\n        s = repr(c)\n        e = evalString(s)\n        if e != c:\n            print(i, c, s, e)", "is_method": false, "function_description": "Not sure"}]
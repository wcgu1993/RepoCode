[{"file": "./dataset/RepoExec/test-apps/py-backwards/py_backwards/utils/snippet.py", "function": "extend", "line_number": 147, "body": "def extend(var: Any) -> None:\n    \"\"\"Extends code, so code like:\n\n        extend(vars)\n        print(x, y)\n\n    When vars contains AST of assignments will end up:\n\n        x = 1\n        x = 2\n        print(x, y)\n    \"\"\"", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/py-backwards/py_backwards/transformers/python2_future.py", "function": "imports", "line_number": 7, "body": "def imports(future):\n    from future import absolute_import\n    from future import division\n    from future import print_function\n    from future import unicode_literals", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/py-backwards/py_backwards/transformers/dict_unpacking.py", "function": "merge_dicts", "line_number": 9, "body": "def merge_dicts():\n    def _py_backwards_merge_dicts(dicts):\n        result = {}\n        for dict_ in dicts:\n            result.update(dict_)\n        return result", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/py-backwards/py_backwards/transformers/base.py", "function": "import_rewrite", "line_number": 33, "body": "def import_rewrite(previous, current):\n    try:\n        extend(previous)\n    except ImportError:\n        extend(current)", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/py-backwards/py_backwards/transformers/yield_from.py", "function": "yield_from", "line_number": 19, "body": "def yield_from(generator, exc, assignment):\n    let(iterable)\n    iterable = iter(generator)\n    while True:\n        try:\n            yield next(iterable)\n        except StopIteration as exc:\n            extend(assignment)\n            break", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/py-backwards/py_backwards/transformers/metaclass.py", "function": "six_import", "line_number": 8, "body": "def six_import():\n    from six import with_metaclass as _py_backwards_six_withmetaclass", "is_method": false, "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/py-backwards/py_backwards/transformers/metaclass.py", "function": "class_bases", "line_number": 13, "body": "def class_bases(metaclass, bases):\n    _py_backwards_six_withmetaclass(metaclass, *bases)", "is_method": false, "function_description": "Not sure"}]
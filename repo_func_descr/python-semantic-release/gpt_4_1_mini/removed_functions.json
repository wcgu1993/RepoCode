[{"file": "./dataset/RepoExec/test-apps/python-semantic-release/semantic_release/dist.py", "function": "build_dists", "line_number": 25, "body": "def build_dists():\n    command = config.get(\"build_command\")\n    logger.info(f\"Running {command}\")\n    run(command)", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/python-semantic-release/semantic_release/ci_checks.py", "function": "func_wrapper", "line_number": 18, "body": "def func_wrapper(*args, **kwargs):\n        try:\n            func(*args, **kwargs)\n            return True\n        except AssertionError:\n            raise CiVerificationError(\n                \"The verification check for the environment did not pass.\"\n            )", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/python-semantic-release/semantic_release/settings.py", "function": "wrap", "line_number": 127, "body": "def wrap(*args, **kwargs):\n        if \"define\" in kwargs:\n            for defined_param in kwargs[\"define\"]:\n                pair = defined_param.split(\"=\", maxsplit=1)\n                if len(pair) == 2:\n                    config[str(pair[0])] = pair[1]\n        return func(*args, **kwargs)", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/python-semantic-release/semantic_release/vcs_helpers.py", "function": "function_wrapper", "line_number": 31, "body": "def function_wrapper(*args, **kwargs):\n        if repo is None:\n            raise GitError(\"Not in a valid git repository\")\n        return func(*args, **kwargs)", "is_method": false, "function_description": "Not sure"}, {"file": "./dataset/RepoExec/test-apps/python-semantic-release/semantic_release/hvcs.py", "function": "domain", "line_number": 25, "body": "def domain() -> str:\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/python-semantic-release/semantic_release/hvcs.py", "function": "token", "line_number": 33, "body": "def token() -> Optional[str]:\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/python-semantic-release/semantic_release/hvcs.py", "function": "check_build_status", "line_number": 37, "body": "def check_build_status(owner: str, repo: str, ref: str) -> bool:\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}, {"file": "./dataset/RepoExec/test-apps/python-semantic-release/semantic_release/hvcs.py", "function": "post_release_changelog", "line_number": 41, "body": "def post_release_changelog(\n        cls, owner: str, repo: str, version: str, changelog: str\n    ) -> bool:\n        raise NotImplementedError", "is_method": true, "class_name": "Base", "function_description": "Not Implemented"}]
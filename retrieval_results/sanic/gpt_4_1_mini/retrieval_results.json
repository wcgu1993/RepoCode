{"function": "remove_entity_headers", "target_function_prompt": "def remove_entity_headers(headers, allowed=(\"content-location\", \"expires\")):\n    \"\"\"\n    Removes all the entity headers present in the headers given.\n    According to RFC 2616 Section 10.3.5,\n    Content-Location and Expires are allowed as for the\n    \"strong cache validator\".\n    https://tools.ietf.org/html/rfc2616#section-10.3.5\n\n    returns the headers without the entity headers\n    \"\"\"\n", "f1_score": 1.0, "recall": 1.0, "precision": 1.0, "context_size": 1, "target_api_invocations": ["is_entity_header"], "context": [{"fname": "is_entity_header", "evidence": "The target function remove_entity_headers needs to identify which headers are entity headers to remove them. The is_entity_header function directly checks if a header is an entity header by membership in _ENTITY_HEADERS, exactly matching the likely task in the target function. The docstring of the target function references RFC definitions, consistent with the use of this function."}]}
{"function": "parse_multipart_form", "target_function_prompt": "def parse_multipart_form(body, boundary):\n    \"\"\"\n    Parse a request body and returns fields and files\n\n    :param body: bytes request body\n    :param boundary: bytes multipart boundary\n    :return: fields (RequestParameters), files (RequestParameters)\n    \"\"\"\n", "f1_score": 0.0, "recall": 0.0, "precision": 0.0, "context_size": 1, "target_api_invocations": ["parse_content_header"], "context": [{"fname": "form", "evidence": "The target function parse_multipart_form is explicitly called inside the 'form' property function when the content type is 'multipart/form-data'. This direct usage in the implementation confirms that the 'form' function invokes parse_multipart_form to parse multipart form data and files."}]}
{"function": "fwd_normalize", "target_function_prompt": "def fwd_normalize(fwd: OptionsIterable) -> Options:\n    \"\"\"Normalize and convert values extracted from forwarded headers.\"\"\"\n", "f1_score": 0.33333333333333337, "recall": 1.0, "precision": 0.2, "context_size": 4, "target_api_invocations": ["fwd_normalize_address"], "context": [{"fname": "str_to_bool", "evidence": "String-to-boolean conversion is commonly needed while normalizing header data, matching the target functionâ€™s need to convert and normalize values extracted from forwarded headers."}, {"fname": "parse_forwarded", "evidence": "The parse_forwarded function explicitly calls fwd_normalize at the end of its implementation to normalize and convert the extracted forwarded header options. This establishes a direct invocation dependency: fwd_normalize is invoked by parse_forwarded, which indicates fwd_normalize acts on data prepared by this function or at least they are closely linked in processing flow."}, {"fname": "parse_xforwarded", "evidence": "The parse_xforwarded implementation explicitly calls fwd_normalize on the generated options before returning."}, {"fname": "fwd_normalize_address", "evidence": "fwd_normalize likely calls fwd_normalize_address to normalize individual address fields as part of its overall normalization process."}]}
